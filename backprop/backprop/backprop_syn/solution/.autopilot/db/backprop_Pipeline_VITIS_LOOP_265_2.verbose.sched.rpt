

================================================================
== Vitis HLS Report for 'backprop_Pipeline_VITIS_LOOP_265_2'
================================================================
* Date:           Wed Dec 20 21:42:19 2023

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        backprop_syn
* Solution:       solution (Vivado IP Flow Target)
* Product family: virtex7
* Target device:  xc7v585t-ffg1761-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.130 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       66|       66|  0.660 us|  0.660 us|   66|   66|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_265_2  |       64|       64|         1|          1|          1|    64|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.84>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 4 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%activations3_0_1 = alloca i32 1"   --->   Operation 5 'alloca' 'activations3_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%activations3_1_1 = alloca i32 1"   --->   Operation 6 'alloca' 'activations3_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%activations3_2_1 = alloca i32 1"   --->   Operation 7 'alloca' 'activations3_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%activations3_0_0_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %activations3_0_0"   --->   Operation 8 'read' 'activations3_0_0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%activations3_1_0_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %activations3_1_0"   --->   Operation 9 'read' 'activations3_1_0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%activations3_2_0_read = read i64 @_ssdm_op_Read.ap_auto.double, i64 %activations3_2_0"   --->   Operation 10 'read' 'activations3_2_0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.84ns)   --->   "%store_ln0 = store i64 %activations3_2_0_read, i64 %activations3_2_1"   --->   Operation 11 'store' 'store_ln0' <Predicate = true> <Delay = 0.84>
ST_1 : Operation 12 [1/1] (0.84ns)   --->   "%store_ln0 = store i64 %activations3_1_0_read, i64 %activations3_1_1"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 0.84>
ST_1 : Operation 13 [1/1] (0.84ns)   --->   "%store_ln0 = store i64 %activations3_0_0_read, i64 %activations3_0_1"   --->   Operation 13 'store' 'store_ln0' <Predicate = true> <Delay = 0.84>
ST_1 : Operation 14 [1/1] (0.84ns)   --->   "%store_ln0 = store i7 0, i7 %j"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 0.84>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body3"   --->   Operation 15 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.13>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%j_3 = load i7 %j" [backprop.c:269]   --->   Operation 16 'load' 'j_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 17 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.86ns)   --->   "%icmp_ln265 = icmp_eq  i7 %j_3, i7 64" [backprop.c:265]   --->   Operation 18 'icmp' 'icmp_ln265' <Predicate = true> <Delay = 0.86> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 64, i64 64, i64 64"   --->   Operation 19 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.27ns)   --->   "%add_ln265 = add i7 %j_3, i7 1" [backprop.c:265]   --->   Operation 20 'add' 'add_ln265' <Predicate = true> <Delay = 1.27> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln265 = br i1 %icmp_ln265, void %for.body3.split_ifconv, void %for.inc52.exitStub" [backprop.c:265]   --->   Operation 21 'br' 'br_ln265' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%activations3_0_1_load_1 = load i64 %activations3_0_1" [backprop.c:268]   --->   Operation 22 'load' 'activations3_0_1_load_1' <Predicate = (!icmp_ln265)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%activations3_1_1_load_1 = load i64 %activations3_1_1" [backprop.c:268]   --->   Operation 23 'load' 'activations3_1_1_load_1' <Predicate = (!icmp_ln265)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%activations3_2_1_load_1 = load i64 %activations3_2_1" [backprop.c:268]   --->   Operation 24 'load' 'activations3_2_1_load_1' <Predicate = (!icmp_ln265)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%j_cast29 = zext i7 %j_3" [backprop.c:269]   --->   Operation 25 'zext' 'j_cast29' <Predicate = (!icmp_ln265)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%specloopname_ln247 = specloopname void @_ssdm_op_SpecLoopName, void @empty_27" [backprop.c:247]   --->   Operation 26 'specloopname' 'specloopname_ln247' <Predicate = (!icmp_ln265)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%activations1_addr = getelementptr i64 %activations1, i64 0, i64 %j_cast29" [backprop.c:266]   --->   Operation 27 'getelementptr' 'activations1_addr' <Predicate = (!icmp_ln265)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (2.26ns)   --->   "%store_ln266 = store i64 0, i6 %activations1_addr" [backprop.c:266]   --->   Operation 28 'store' 'store_ln266' <Predicate = (!icmp_ln265)> <Delay = 2.26> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.26> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 64> <RAM>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%activations2_addr = getelementptr i64 %activations2, i64 0, i64 %j_cast29" [backprop.c:267]   --->   Operation 29 'getelementptr' 'activations2_addr' <Predicate = (!icmp_ln265)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (2.26ns)   --->   "%store_ln267 = store i64 0, i6 %activations2_addr" [backprop.c:267]   --->   Operation 30 'store' 'store_ln267' <Predicate = (!icmp_ln265)> <Delay = 2.26> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.26> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 64> <RAM>
ST_2 : Operation 31 [1/1] (0.86ns)   --->   "%icmp_ln268 = icmp_ult  i7 %j_3, i7 3" [backprop.c:268]   --->   Operation 31 'icmp' 'icmp_ln268' <Predicate = (!icmp_ln265)> <Delay = 0.86> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%trunc_ln269 = trunc i7 %j_3" [backprop.c:269]   --->   Operation 32 'trunc' 'trunc_ln269' <Predicate = (!icmp_ln265)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.48ns)   --->   "%icmp_ln269 = icmp_eq  i2 %trunc_ln269, i2 0" [backprop.c:269]   --->   Operation 33 'icmp' 'icmp_ln269' <Predicate = (!icmp_ln265)> <Delay = 0.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.48ns)   --->   "%icmp_ln269_1 = icmp_eq  i2 %trunc_ln269, i2 1" [backprop.c:269]   --->   Operation 34 'icmp' 'icmp_ln269_1' <Predicate = (!icmp_ln265)> <Delay = 0.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node select_ln268)   --->   "%or_ln269 = or i1 %icmp_ln269, i1 %icmp_ln269_1" [backprop.c:269]   --->   Operation 35 'or' 'or_ln269' <Predicate = (!icmp_ln265)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node select_ln268)   --->   "%select_ln269 = select i1 %or_ln269, i64 %activations3_2_1_load_1, i64 0" [backprop.c:269]   --->   Operation 36 'select' 'select_ln269' <Predicate = (!icmp_ln265)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node select_ln268_1)   --->   "%select_ln269_1 = select i1 %icmp_ln269_1, i64 0, i64 %activations3_1_1_load_1" [backprop.c:269]   --->   Operation 37 'select' 'select_ln269_1' <Predicate = (!icmp_ln265)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node select_ln268_2)   --->   "%select_ln269_2 = select i1 %icmp_ln269, i64 0, i64 %activations3_0_1_load_1" [backprop.c:269]   --->   Operation 38 'select' 'select_ln269_2' <Predicate = (!icmp_ln265)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.62ns) (out node of the LUT)   --->   "%select_ln268 = select i1 %icmp_ln268, i64 %select_ln269, i64 %activations3_2_1_load_1" [backprop.c:268]   --->   Operation 39 'select' 'select_ln268' <Predicate = (!icmp_ln265)> <Delay = 0.62> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.62ns) (out node of the LUT)   --->   "%select_ln268_1 = select i1 %icmp_ln268, i64 %select_ln269_1, i64 %activations3_1_1_load_1" [backprop.c:268]   --->   Operation 40 'select' 'select_ln268_1' <Predicate = (!icmp_ln265)> <Delay = 0.62> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.62ns) (out node of the LUT)   --->   "%select_ln268_2 = select i1 %icmp_ln268, i64 %select_ln269_2, i64 %activations3_0_1_load_1" [backprop.c:268]   --->   Operation 41 'select' 'select_ln268_2' <Predicate = (!icmp_ln265)> <Delay = 0.62> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.84ns)   --->   "%store_ln265 = store i64 %select_ln268, i64 %activations3_2_1" [backprop.c:265]   --->   Operation 42 'store' 'store_ln265' <Predicate = (!icmp_ln265)> <Delay = 0.84>
ST_2 : Operation 43 [1/1] (0.84ns)   --->   "%store_ln265 = store i64 %select_ln268_1, i64 %activations3_1_1" [backprop.c:265]   --->   Operation 43 'store' 'store_ln265' <Predicate = (!icmp_ln265)> <Delay = 0.84>
ST_2 : Operation 44 [1/1] (0.84ns)   --->   "%store_ln265 = store i64 %select_ln268_2, i64 %activations3_0_1" [backprop.c:265]   --->   Operation 44 'store' 'store_ln265' <Predicate = (!icmp_ln265)> <Delay = 0.84>
ST_2 : Operation 45 [1/1] (0.84ns)   --->   "%store_ln265 = store i7 %add_ln265, i7 %j" [backprop.c:265]   --->   Operation 45 'store' 'store_ln265' <Predicate = (!icmp_ln265)> <Delay = 0.84>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln265 = br void %for.body3" [backprop.c:265]   --->   Operation 46 'br' 'br_ln265' <Predicate = (!icmp_ln265)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%activations3_0_1_load = load i64 %activations3_0_1"   --->   Operation 47 'load' 'activations3_0_1_load' <Predicate = (icmp_ln265)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%activations3_1_1_load = load i64 %activations3_1_1"   --->   Operation 48 'load' 'activations3_1_1_load' <Predicate = (icmp_ln265)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%activations3_2_1_load = load i64 %activations3_2_1"   --->   Operation 49 'load' 'activations3_2_1_load' <Predicate = (icmp_ln265)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.doubleP0A, i64 %activations3_2_1_out, i64 %activations3_2_1_load"   --->   Operation 50 'write' 'write_ln0' <Predicate = (icmp_ln265)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.doubleP0A, i64 %activations3_1_1_out, i64 %activations3_1_1_load"   --->   Operation 51 'write' 'write_ln0' <Predicate = (icmp_ln265)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.doubleP0A, i64 %activations3_0_1_out, i64 %activations3_0_1_load"   --->   Operation 52 'write' 'write_ln0' <Predicate = (icmp_ln265)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 53 'ret' 'ret_ln0' <Predicate = (icmp_ln265)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.844ns
The critical path consists of the following:
	'alloca' operation ('activations3_2_1') [12]  (0 ns)
	'store' operation ('store_ln0') of variable 'activations3_2_0_read' on local variable 'activations3_2_1' [16]  (0.844 ns)

 <State 2>: 3.13ns
The critical path consists of the following:
	'load' operation ('j', backprop.c:269) on local variable 'j' [22]  (0 ns)
	'icmp' operation ('icmp_ln268', backprop.c:268) [38]  (0.864 ns)
	'select' operation ('select_ln268', backprop.c:268) [46]  (0.625 ns)
	'store' operation ('store_ln265', backprop.c:265) of variable 'select_ln268', backprop.c:268 on local variable 'activations3_2_1' [49]  (0.844 ns)
	blocking operation 0.797 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
