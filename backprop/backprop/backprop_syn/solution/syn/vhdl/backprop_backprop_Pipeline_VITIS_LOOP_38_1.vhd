-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity backprop_backprop_Pipeline_VITIS_LOOP_38_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    activations1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    activations1_ce0 : OUT STD_LOGIC;
    activations1_we0 : OUT STD_LOGIC;
    activations1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    weights1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    weights1_ce0 : OUT STD_LOGIC;
    weights1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    weights1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    weights1_ce1 : OUT STD_LOGIC;
    weights1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    bitcast_ln41_1 : IN STD_LOGIC_VECTOR (63 downto 0);
    bitcast_ln41_14 : IN STD_LOGIC_VECTOR (63 downto 0);
    bitcast_ln41_15 : IN STD_LOGIC_VECTOR (63 downto 0);
    bitcast_ln41_16 : IN STD_LOGIC_VECTOR (63 downto 0);
    bitcast_ln41_17 : IN STD_LOGIC_VECTOR (63 downto 0);
    bitcast_ln41_18 : IN STD_LOGIC_VECTOR (63 downto 0);
    bitcast_ln41_19 : IN STD_LOGIC_VECTOR (63 downto 0);
    bitcast_ln41_20 : IN STD_LOGIC_VECTOR (63 downto 0);
    bitcast_ln41_21 : IN STD_LOGIC_VECTOR (63 downto 0);
    bitcast_ln41_22 : IN STD_LOGIC_VECTOR (63 downto 0);
    bitcast_ln41_23 : IN STD_LOGIC_VECTOR (63 downto 0);
    bitcast_ln41_24 : IN STD_LOGIC_VECTOR (63 downto 0);
    bitcast_ln41_25 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_6768_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_6768_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_6768_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_6768_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_6768_p_ce : OUT STD_LOGIC;
    grp_fu_6772_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_6772_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_6772_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_6772_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_6772_p_ce : OUT STD_LOGIC;
    grp_fu_6776_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_6776_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_6776_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_6776_p_ce : OUT STD_LOGIC;
    grp_fu_6780_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_6780_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_6780_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_6780_p_ce : OUT STD_LOGIC );
end;


architecture behav of backprop_backprop_Pipeline_VITIS_LOOP_38_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv10_D : STD_LOGIC_VECTOR (9 downto 0) := "0000001101";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv10_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_const_lv10_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000101";
    constant ap_const_lv10_6 : STD_LOGIC_VECTOR (9 downto 0) := "0000000110";
    constant ap_const_lv10_7 : STD_LOGIC_VECTOR (9 downto 0) := "0000000111";
    constant ap_const_lv10_8 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_const_lv10_9 : STD_LOGIC_VECTOR (9 downto 0) := "0000001001";
    constant ap_const_lv10_A : STD_LOGIC_VECTOR (9 downto 0) := "0000001010";
    constant ap_const_lv10_B : STD_LOGIC_VECTOR (9 downto 0) := "0000001011";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv10_C : STD_LOGIC_VECTOR (9 downto 0) := "0000001100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_state28_pp0_stage6_iter3 : BOOLEAN;
    signal ap_block_state35_pp0_stage6_iter4 : BOOLEAN;
    signal ap_block_state42_pp0_stage6_iter5 : BOOLEAN;
    signal ap_block_state49_pp0_stage6_iter6 : BOOLEAN;
    signal ap_block_state56_pp0_stage6_iter7 : BOOLEAN;
    signal ap_block_state63_pp0_stage6_iter8 : BOOLEAN;
    signal ap_block_state70_pp0_stage6_iter9 : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal icmp_ln38_reg_643 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage6 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_317 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state37_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state44_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state51_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state58_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state65_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state72_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state17_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state24_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state31_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state38_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state45_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state52_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state59_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_state66_pp0_stage2_iter9 : BOOLEAN;
    signal ap_block_state73_pp0_stage2_iter10 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state25_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state32_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state39_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state46_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state53_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state60_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_state67_pp0_stage3_iter9 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state26_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state33_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state40_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state47_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state54_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_state61_pp0_stage4_iter8 : BOOLEAN;
    signal ap_block_state68_pp0_stage4_iter9 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state27_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state34_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_state41_pp0_stage5_iter5 : BOOLEAN;
    signal ap_block_state48_pp0_stage5_iter6 : BOOLEAN;
    signal ap_block_state55_pp0_stage5_iter7 : BOOLEAN;
    signal ap_block_state62_pp0_stage5_iter8 : BOOLEAN;
    signal ap_block_state69_pp0_stage5_iter9 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state43_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state50_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state57_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state64_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state71_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_322 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_326 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_2_reg_637 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_2_reg_637_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal j_2_reg_637_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal j_2_reg_637_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal j_2_reg_637_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal j_2_reg_637_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal j_2_reg_637_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal j_2_reg_637_pp0_iter7_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal j_2_reg_637_pp0_iter8_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal j_2_reg_637_pp0_iter9_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal j_2_reg_637_pp0_iter10_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln38_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_reg_643_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_reg_643_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_reg_643_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_reg_643_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_reg_643_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_reg_643_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_reg_643_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_reg_643_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_reg_643_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln41_fu_354_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln41_reg_647 : STD_LOGIC_VECTOR (9 downto 0);
    signal bitcast_ln41_fu_396_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln41_13_fu_401_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln41_2_fu_426_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln41_3_fu_431_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln41_4_fu_456_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln41_5_fu_461_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln41_6_fu_486_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln41_7_fu_491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_reg_762 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_1_reg_767 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln41_8_fu_521_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln41_9_fu_526_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_2_reg_787 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_2_reg_787_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_3_reg_792 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_3_reg_792_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_3_reg_792_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln41_10_fu_546_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln41_11_fu_551_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_4_reg_807 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_4_reg_807_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_4_reg_807_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_5_reg_812 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_5_reg_812_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_5_reg_812_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_5_reg_812_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln41_12_fu_556_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_6_reg_822 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_6_reg_822_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_6_reg_822_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_6_reg_822_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_7_reg_827 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_7_reg_827_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_7_reg_827_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_7_reg_827_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_7_reg_827_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_8_reg_832 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_8_reg_832_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_8_reg_832_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_8_reg_832_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_8_reg_832_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_8_reg_832_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_9_reg_837 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_9_reg_837_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_9_reg_837_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_9_reg_837_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_9_reg_837_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_9_reg_837_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add11_i_reg_842 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_s_reg_847 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_s_reg_847_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_s_reg_847_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_s_reg_847_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_s_reg_847_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_s_reg_847_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_s_reg_847_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_10_reg_852 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_10_reg_852_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_10_reg_852_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_10_reg_852_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_10_reg_852_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_10_reg_852_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_10_reg_852_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_10_reg_852_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_11_reg_857 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_11_reg_857_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_11_reg_857_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_11_reg_857_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_11_reg_857_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_11_reg_857_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_11_reg_857_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_i_11_reg_857_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add11_i_1_reg_862 : STD_LOGIC_VECTOR (63 downto 0);
    signal add11_i_2_reg_867 : STD_LOGIC_VECTOR (63 downto 0);
    signal add11_i_3_reg_872 : STD_LOGIC_VECTOR (63 downto 0);
    signal add11_i_4_reg_877 : STD_LOGIC_VECTOR (63 downto 0);
    signal add11_i_5_reg_882 : STD_LOGIC_VECTOR (63 downto 0);
    signal add11_i_6_reg_887 : STD_LOGIC_VECTOR (63 downto 0);
    signal add11_i_7_reg_892 : STD_LOGIC_VECTOR (63 downto 0);
    signal add11_i_9_reg_897 : STD_LOGIC_VECTOR (63 downto 0);
    signal add11_i_s_reg_902 : STD_LOGIC_VECTOR (63 downto 0);
    signal add11_i_10_reg_907 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal zext_ln41_fu_360_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln41_2_fu_371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_3_fu_381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln41_4_fu_391_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_5_fu_411_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln41_6_fu_421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_7_fu_441_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln41_8_fu_451_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_9_fu_471_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln41_10_fu_481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_11_fu_501_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln41_12_fu_511_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_13_fu_536_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal j_6_cast30_fu_561_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_92 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln38_fu_516_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_300_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_300_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_305_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_305_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_309_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_309_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_313_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_313_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_39_fu_346_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln41_fu_354_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln41_fu_354_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln41_fu_365_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln41_1_fu_376_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln41_2_fu_386_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln41_3_fu_406_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln41_4_fu_416_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln41_5_fu_436_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln41_6_fu_446_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln41_7_fu_466_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln41_8_fu_476_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln41_9_fu_496_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln41_10_fu_506_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln41_11_fu_531_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter9_stage2 : STD_LOGIC;
    signal ap_idle_pp0_0to8 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to10 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln41_fu_354_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component backprop_dadddsub_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component backprop_dmul_64ns_64ns_64_5_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component backprop_mul_6ns_5ns_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component backprop_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_6ns_5ns_10_1_1_U13 : component backprop_mul_6ns_5ns_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 5,
        dout_WIDTH => 10)
    port map (
        din0 => mul_ln41_fu_354_p0,
        din1 => mul_ln41_fu_354_p1,
        dout => mul_ln41_fu_354_p2);

    flow_control_loop_pipe_sequential_init_U : component backprop_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage6,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage6)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to8 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage2))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to8 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage2))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to8 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage2))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to8 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage2))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to8 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage2))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to8 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage2))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to8 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage2))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to8 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage2))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to8 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage2))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    j_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_fu_92 <= ap_const_lv7_0;
            elsif (((icmp_ln38_reg_643 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                j_fu_92 <= add_ln38_fu_516_p2;
            end if; 
        end if;
    end process;

    reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                reg_317 <= weights1_q0;
            elsif ((((icmp_ln38_reg_643 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln38_reg_643 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln38_reg_643 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln38_reg_643 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln38_reg_643 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln38_reg_643 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                reg_317 <= weights1_q1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                add11_i_10_reg_907 <= grp_fu_6772_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                add11_i_1_reg_862 <= grp_fu_6768_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add11_i_2_reg_867 <= grp_fu_6768_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                add11_i_3_reg_872 <= grp_fu_6768_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                add11_i_4_reg_877 <= grp_fu_6768_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add11_i_5_reg_882 <= grp_fu_6768_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                add11_i_6_reg_887 <= grp_fu_6768_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                add11_i_7_reg_892 <= grp_fu_6772_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add11_i_9_reg_897 <= grp_fu_6772_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                add11_i_reg_842 <= grp_fu_6768_p_dout0;
                mul8_i_10_reg_852 <= grp_fu_6780_p_dout0;
                mul8_i_s_reg_847 <= grp_fu_6776_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                add11_i_s_reg_902 <= grp_fu_6772_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln38_reg_643 <= icmp_ln38_fu_340_p2;
                icmp_ln38_reg_643_pp0_iter1_reg <= icmp_ln38_reg_643;
                icmp_ln38_reg_643_pp0_iter2_reg <= icmp_ln38_reg_643_pp0_iter1_reg;
                icmp_ln38_reg_643_pp0_iter3_reg <= icmp_ln38_reg_643_pp0_iter2_reg;
                icmp_ln38_reg_643_pp0_iter4_reg <= icmp_ln38_reg_643_pp0_iter3_reg;
                icmp_ln38_reg_643_pp0_iter5_reg <= icmp_ln38_reg_643_pp0_iter4_reg;
                icmp_ln38_reg_643_pp0_iter6_reg <= icmp_ln38_reg_643_pp0_iter5_reg;
                icmp_ln38_reg_643_pp0_iter7_reg <= icmp_ln38_reg_643_pp0_iter6_reg;
                icmp_ln38_reg_643_pp0_iter8_reg <= icmp_ln38_reg_643_pp0_iter7_reg;
                icmp_ln38_reg_643_pp0_iter9_reg <= icmp_ln38_reg_643_pp0_iter8_reg;
                j_2_reg_637 <= ap_sig_allocacmp_j_2;
                j_2_reg_637_pp0_iter10_reg <= j_2_reg_637_pp0_iter9_reg;
                j_2_reg_637_pp0_iter1_reg <= j_2_reg_637;
                j_2_reg_637_pp0_iter2_reg <= j_2_reg_637_pp0_iter1_reg;
                j_2_reg_637_pp0_iter3_reg <= j_2_reg_637_pp0_iter2_reg;
                j_2_reg_637_pp0_iter4_reg <= j_2_reg_637_pp0_iter3_reg;
                j_2_reg_637_pp0_iter5_reg <= j_2_reg_637_pp0_iter4_reg;
                j_2_reg_637_pp0_iter6_reg <= j_2_reg_637_pp0_iter5_reg;
                j_2_reg_637_pp0_iter7_reg <= j_2_reg_637_pp0_iter6_reg;
                j_2_reg_637_pp0_iter8_reg <= j_2_reg_637_pp0_iter7_reg;
                j_2_reg_637_pp0_iter9_reg <= j_2_reg_637_pp0_iter8_reg;
                mul8_i_2_reg_787_pp0_iter2_reg <= mul8_i_2_reg_787;
                mul8_i_3_reg_792_pp0_iter2_reg <= mul8_i_3_reg_792;
                mul8_i_3_reg_792_pp0_iter3_reg <= mul8_i_3_reg_792_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                mul8_i_10_reg_852_pp0_iter2_reg <= mul8_i_10_reg_852;
                mul8_i_10_reg_852_pp0_iter3_reg <= mul8_i_10_reg_852_pp0_iter2_reg;
                mul8_i_10_reg_852_pp0_iter4_reg <= mul8_i_10_reg_852_pp0_iter3_reg;
                mul8_i_10_reg_852_pp0_iter5_reg <= mul8_i_10_reg_852_pp0_iter4_reg;
                mul8_i_10_reg_852_pp0_iter6_reg <= mul8_i_10_reg_852_pp0_iter5_reg;
                mul8_i_10_reg_852_pp0_iter7_reg <= mul8_i_10_reg_852_pp0_iter6_reg;
                mul8_i_10_reg_852_pp0_iter8_reg <= mul8_i_10_reg_852_pp0_iter7_reg;
                mul8_i_s_reg_847_pp0_iter2_reg <= mul8_i_s_reg_847;
                mul8_i_s_reg_847_pp0_iter3_reg <= mul8_i_s_reg_847_pp0_iter2_reg;
                mul8_i_s_reg_847_pp0_iter4_reg <= mul8_i_s_reg_847_pp0_iter3_reg;
                mul8_i_s_reg_847_pp0_iter5_reg <= mul8_i_s_reg_847_pp0_iter4_reg;
                mul8_i_s_reg_847_pp0_iter6_reg <= mul8_i_s_reg_847_pp0_iter5_reg;
                mul8_i_s_reg_847_pp0_iter7_reg <= mul8_i_s_reg_847_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mul8_i_11_reg_857 <= grp_fu_6776_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mul8_i_11_reg_857_pp0_iter2_reg <= mul8_i_11_reg_857;
                mul8_i_11_reg_857_pp0_iter3_reg <= mul8_i_11_reg_857_pp0_iter2_reg;
                mul8_i_11_reg_857_pp0_iter4_reg <= mul8_i_11_reg_857_pp0_iter3_reg;
                mul8_i_11_reg_857_pp0_iter5_reg <= mul8_i_11_reg_857_pp0_iter4_reg;
                mul8_i_11_reg_857_pp0_iter6_reg <= mul8_i_11_reg_857_pp0_iter5_reg;
                mul8_i_11_reg_857_pp0_iter7_reg <= mul8_i_11_reg_857_pp0_iter6_reg;
                mul8_i_11_reg_857_pp0_iter8_reg <= mul8_i_11_reg_857_pp0_iter7_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln38_reg_643 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul8_i_1_reg_767 <= grp_fu_6780_p_dout0;
                mul8_i_reg_762 <= grp_fu_6776_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul8_i_2_reg_787 <= grp_fu_6776_p_dout0;
                mul8_i_3_reg_792 <= grp_fu_6780_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul8_i_4_reg_807 <= grp_fu_6776_p_dout0;
                mul8_i_5_reg_812 <= grp_fu_6780_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul8_i_4_reg_807_pp0_iter2_reg <= mul8_i_4_reg_807;
                mul8_i_4_reg_807_pp0_iter3_reg <= mul8_i_4_reg_807_pp0_iter2_reg;
                mul8_i_5_reg_812_pp0_iter2_reg <= mul8_i_5_reg_812;
                mul8_i_5_reg_812_pp0_iter3_reg <= mul8_i_5_reg_812_pp0_iter2_reg;
                mul8_i_5_reg_812_pp0_iter4_reg <= mul8_i_5_reg_812_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul8_i_6_reg_822 <= grp_fu_6776_p_dout0;
                mul8_i_7_reg_827 <= grp_fu_6780_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul8_i_6_reg_822_pp0_iter2_reg <= mul8_i_6_reg_822;
                mul8_i_6_reg_822_pp0_iter3_reg <= mul8_i_6_reg_822_pp0_iter2_reg;
                mul8_i_6_reg_822_pp0_iter4_reg <= mul8_i_6_reg_822_pp0_iter3_reg;
                mul8_i_7_reg_827_pp0_iter2_reg <= mul8_i_7_reg_827;
                mul8_i_7_reg_827_pp0_iter3_reg <= mul8_i_7_reg_827_pp0_iter2_reg;
                mul8_i_7_reg_827_pp0_iter4_reg <= mul8_i_7_reg_827_pp0_iter3_reg;
                mul8_i_7_reg_827_pp0_iter5_reg <= mul8_i_7_reg_827_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul8_i_8_reg_832 <= grp_fu_6776_p_dout0;
                mul8_i_9_reg_837 <= grp_fu_6780_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul8_i_8_reg_832_pp0_iter2_reg <= mul8_i_8_reg_832;
                mul8_i_8_reg_832_pp0_iter3_reg <= mul8_i_8_reg_832_pp0_iter2_reg;
                mul8_i_8_reg_832_pp0_iter4_reg <= mul8_i_8_reg_832_pp0_iter3_reg;
                mul8_i_8_reg_832_pp0_iter5_reg <= mul8_i_8_reg_832_pp0_iter4_reg;
                mul8_i_8_reg_832_pp0_iter6_reg <= mul8_i_8_reg_832_pp0_iter5_reg;
                mul8_i_9_reg_837_pp0_iter2_reg <= mul8_i_9_reg_837;
                mul8_i_9_reg_837_pp0_iter3_reg <= mul8_i_9_reg_837_pp0_iter2_reg;
                mul8_i_9_reg_837_pp0_iter4_reg <= mul8_i_9_reg_837_pp0_iter3_reg;
                mul8_i_9_reg_837_pp0_iter5_reg <= mul8_i_9_reg_837_pp0_iter4_reg;
                mul8_i_9_reg_837_pp0_iter6_reg <= mul8_i_9_reg_837_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln38_fu_340_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln41_reg_647 <= mul_ln41_fu_354_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln38_reg_643 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln38_reg_643 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln38_reg_643 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln38_reg_643 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln38_reg_643 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln38_reg_643 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_322 <= weights1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_326 <= grp_fu_6772_p_dout0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage6_subdone, ap_block_pp0_stage2_subdone, ap_condition_exit_pp0_iter9_stage2, ap_idle_pp0_0to8, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to10, ap_block_pp0_stage1_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to10 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_idle_pp0_0to8 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    activations1_address0 <= j_6_cast30_fu_561_p1(6 - 1 downto 0);

    activations1_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            activations1_ce0 <= ap_const_logic_1;
        else 
            activations1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    activations1_d0 <= reg_326;

    activations1_we0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            activations1_we0 <= ap_const_logic_1;
        else 
            activations1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln38_fu_516_p2 <= std_logic_vector(unsigned(j_2_reg_637) + unsigned(ap_const_lv7_1));
    add_ln41_10_fu_506_p2 <= std_logic_vector(unsigned(mul_ln41_reg_647) + unsigned(ap_const_lv10_B));
    add_ln41_11_fu_531_p2 <= std_logic_vector(unsigned(mul_ln41_reg_647) + unsigned(ap_const_lv10_C));
    add_ln41_1_fu_376_p2 <= std_logic_vector(unsigned(mul_ln41_reg_647) + unsigned(ap_const_lv10_2));
    add_ln41_2_fu_386_p2 <= std_logic_vector(unsigned(mul_ln41_reg_647) + unsigned(ap_const_lv10_3));
    add_ln41_3_fu_406_p2 <= std_logic_vector(unsigned(mul_ln41_reg_647) + unsigned(ap_const_lv10_4));
    add_ln41_4_fu_416_p2 <= std_logic_vector(unsigned(mul_ln41_reg_647) + unsigned(ap_const_lv10_5));
    add_ln41_5_fu_436_p2 <= std_logic_vector(unsigned(mul_ln41_reg_647) + unsigned(ap_const_lv10_6));
    add_ln41_6_fu_446_p2 <= std_logic_vector(unsigned(mul_ln41_reg_647) + unsigned(ap_const_lv10_7));
    add_ln41_7_fu_466_p2 <= std_logic_vector(unsigned(mul_ln41_reg_647) + unsigned(ap_const_lv10_8));
    add_ln41_8_fu_476_p2 <= std_logic_vector(unsigned(mul_ln41_reg_647) + unsigned(ap_const_lv10_9));
    add_ln41_9_fu_496_p2 <= std_logic_vector(unsigned(mul_ln41_reg_647) + unsigned(ap_const_lv10_A));
    add_ln41_fu_365_p2 <= std_logic_vector(unsigned(mul_ln41_fu_354_p2) + unsigned(ap_const_lv10_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage5_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage6_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage4_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage5_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage6_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage3_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage4_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage5_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage6_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage2_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_subdone, icmp_ln38_reg_643)
    begin
        if (((icmp_ln38_reg_643 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            ap_condition_exit_pp0_iter0_stage6 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter9_stage2_assign_proc : process(ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage2, icmp_ln38_reg_643_pp0_iter9_reg, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln38_reg_643_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter9_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter9_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter9_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to8_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to8 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to10_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to10 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to10 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage6;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_92, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_2 <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_j_2 <= j_fu_92;
        end if; 
    end process;

    bitcast_ln41_10_fu_546_p1 <= reg_317;
    bitcast_ln41_11_fu_551_p1 <= reg_322;
    bitcast_ln41_12_fu_556_p1 <= reg_317;
    bitcast_ln41_13_fu_401_p1 <= reg_322;
    bitcast_ln41_2_fu_426_p1 <= reg_317;
    bitcast_ln41_3_fu_431_p1 <= reg_322;
    bitcast_ln41_4_fu_456_p1 <= reg_317;
    bitcast_ln41_5_fu_461_p1 <= reg_322;
    bitcast_ln41_6_fu_486_p1 <= reg_317;
    bitcast_ln41_7_fu_491_p1 <= reg_322;
    bitcast_ln41_8_fu_521_p1 <= reg_317;
    bitcast_ln41_9_fu_526_p1 <= reg_322;
    bitcast_ln41_fu_396_p1 <= reg_317;
    empty_39_fu_346_p1 <= ap_sig_allocacmp_j_2(6 - 1 downto 0);

    grp_fu_300_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, mul8_i_reg_762, add11_i_reg_842, add11_i_1_reg_862, add11_i_2_reg_867, add11_i_3_reg_872, add11_i_4_reg_877, add11_i_5_reg_882, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_300_p0 <= add11_i_5_reg_882;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_300_p0 <= add11_i_4_reg_877;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_300_p0 <= add11_i_3_reg_872;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_300_p0 <= add11_i_2_reg_867;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_300_p0 <= add11_i_1_reg_862;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_300_p0 <= add11_i_reg_842;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_300_p0 <= mul8_i_reg_762;
        else 
            grp_fu_300_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_300_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, mul8_i_1_reg_767, mul8_i_2_reg_787_pp0_iter2_reg, mul8_i_3_reg_792_pp0_iter3_reg, mul8_i_4_reg_807_pp0_iter3_reg, mul8_i_5_reg_812_pp0_iter4_reg, mul8_i_6_reg_822_pp0_iter4_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_300_p1 <= mul8_i_6_reg_822_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_300_p1 <= mul8_i_5_reg_812_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_300_p1 <= mul8_i_4_reg_807_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_300_p1 <= mul8_i_3_reg_792_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_300_p1 <= mul8_i_2_reg_787_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_300_p1 <= mul8_i_1_reg_767;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_300_p1 <= ap_const_lv64_0;
        else 
            grp_fu_300_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_305_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, reg_326, add11_i_6_reg_887, add11_i_7_reg_892, add11_i_9_reg_897, add11_i_s_reg_902, add11_i_10_reg_907, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_305_p0 <= add11_i_10_reg_907;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_305_p0 <= add11_i_s_reg_902;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_305_p0 <= add11_i_9_reg_897;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_305_p0 <= reg_326;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_305_p0 <= add11_i_7_reg_892;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_305_p0 <= add11_i_6_reg_887;
        else 
            grp_fu_305_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_305_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, mul8_i_7_reg_827_pp0_iter5_reg, mul8_i_8_reg_832_pp0_iter6_reg, mul8_i_9_reg_837_pp0_iter6_reg, mul8_i_s_reg_847_pp0_iter7_reg, mul8_i_10_reg_852_pp0_iter8_reg, mul8_i_11_reg_857_pp0_iter8_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_305_p1 <= mul8_i_11_reg_857_pp0_iter8_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_305_p1 <= mul8_i_10_reg_852_pp0_iter8_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_305_p1 <= mul8_i_s_reg_847_pp0_iter7_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_305_p1 <= mul8_i_9_reg_837_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_305_p1 <= mul8_i_8_reg_832_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_305_p1 <= mul8_i_7_reg_827_pp0_iter5_reg;
        else 
            grp_fu_305_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_309_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, bitcast_ln41_fu_396_p1, bitcast_ln41_2_fu_426_p1, bitcast_ln41_4_fu_456_p1, bitcast_ln41_6_fu_486_p1, bitcast_ln41_8_fu_521_p1, bitcast_ln41_10_fu_546_p1, bitcast_ln41_12_fu_556_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_309_p0 <= bitcast_ln41_12_fu_556_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_309_p0 <= bitcast_ln41_10_fu_546_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_309_p0 <= bitcast_ln41_8_fu_521_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_309_p0 <= bitcast_ln41_6_fu_486_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_309_p0 <= bitcast_ln41_4_fu_456_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_309_p0 <= bitcast_ln41_2_fu_426_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_309_p0 <= bitcast_ln41_fu_396_p1;
        else 
            grp_fu_309_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_309_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, bitcast_ln41_1, bitcast_ln41_15, bitcast_ln41_17, bitcast_ln41_19, bitcast_ln41_21, bitcast_ln41_23, bitcast_ln41_25, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_309_p1 <= bitcast_ln41_25;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_309_p1 <= bitcast_ln41_23;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_309_p1 <= bitcast_ln41_21;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_309_p1 <= bitcast_ln41_19;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_309_p1 <= bitcast_ln41_17;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_309_p1 <= bitcast_ln41_15;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_309_p1 <= bitcast_ln41_1;
        else 
            grp_fu_309_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_313_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, bitcast_ln41_13_fu_401_p1, bitcast_ln41_3_fu_431_p1, bitcast_ln41_5_fu_461_p1, bitcast_ln41_7_fu_491_p1, bitcast_ln41_9_fu_526_p1, bitcast_ln41_11_fu_551_p1, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_313_p0 <= bitcast_ln41_11_fu_551_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_313_p0 <= bitcast_ln41_9_fu_526_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_313_p0 <= bitcast_ln41_7_fu_491_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_313_p0 <= bitcast_ln41_5_fu_461_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_313_p0 <= bitcast_ln41_3_fu_431_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_313_p0 <= bitcast_ln41_13_fu_401_p1;
        else 
            grp_fu_313_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_313_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, bitcast_ln41_14, bitcast_ln41_16, bitcast_ln41_18, bitcast_ln41_20, bitcast_ln41_22, bitcast_ln41_24, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_313_p1 <= bitcast_ln41_24;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_313_p1 <= bitcast_ln41_22;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_313_p1 <= bitcast_ln41_20;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_313_p1 <= bitcast_ln41_18;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_313_p1 <= bitcast_ln41_16;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_313_p1 <= bitcast_ln41_14;
        else 
            grp_fu_313_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_6768_p_ce <= ap_const_logic_1;
    grp_fu_6768_p_din0 <= grp_fu_300_p0;
    grp_fu_6768_p_din1 <= grp_fu_300_p1;
    grp_fu_6768_p_opcode <= ap_const_lv2_0(1 - 1 downto 0);
    grp_fu_6772_p_ce <= ap_const_logic_1;
    grp_fu_6772_p_din0 <= grp_fu_305_p0;
    grp_fu_6772_p_din1 <= grp_fu_305_p1;
    grp_fu_6772_p_opcode <= ap_const_lv2_0(1 - 1 downto 0);
    grp_fu_6776_p_ce <= ap_const_logic_1;
    grp_fu_6776_p_din0 <= grp_fu_309_p0;
    grp_fu_6776_p_din1 <= grp_fu_309_p1;
    grp_fu_6780_p_ce <= ap_const_logic_1;
    grp_fu_6780_p_din0 <= grp_fu_313_p0;
    grp_fu_6780_p_din1 <= grp_fu_313_p1;
    icmp_ln38_fu_340_p2 <= "1" when (ap_sig_allocacmp_j_2 = ap_const_lv7_40) else "0";
    j_6_cast30_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_2_reg_637_pp0_iter10_reg),64));
    mul_ln41_fu_354_p0 <= mul_ln41_fu_354_p00(6 - 1 downto 0);
    mul_ln41_fu_354_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_39_fu_346_p1),10));
    mul_ln41_fu_354_p1 <= ap_const_lv10_D(5 - 1 downto 0);

    weights1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage0, zext_ln41_2_fu_371_p1, ap_block_pp0_stage1, zext_ln41_4_fu_391_p1, ap_block_pp0_stage2, zext_ln41_6_fu_421_p1, ap_block_pp0_stage3, zext_ln41_8_fu_451_p1, ap_block_pp0_stage4, zext_ln41_10_fu_481_p1, ap_block_pp0_stage5, zext_ln41_12_fu_511_p1, zext_ln41_13_fu_536_p1, ap_block_pp0_stage6)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                weights1_address0 <= zext_ln41_13_fu_536_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                weights1_address0 <= zext_ln41_12_fu_511_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                weights1_address0 <= zext_ln41_10_fu_481_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                weights1_address0 <= zext_ln41_8_fu_451_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                weights1_address0 <= zext_ln41_6_fu_421_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights1_address0 <= zext_ln41_4_fu_391_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights1_address0 <= zext_ln41_2_fu_371_p1(10 - 1 downto 0);
            else 
                weights1_address0 <= "XXXXXXXXXX";
            end if;
        else 
            weights1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    weights1_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, zext_ln41_fu_360_p1, ap_block_pp0_stage0, zext_ln41_3_fu_381_p1, ap_block_pp0_stage1, zext_ln41_5_fu_411_p1, ap_block_pp0_stage2, zext_ln41_7_fu_441_p1, ap_block_pp0_stage3, zext_ln41_9_fu_471_p1, ap_block_pp0_stage4, zext_ln41_11_fu_501_p1, ap_block_pp0_stage5)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                weights1_address1 <= zext_ln41_11_fu_501_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                weights1_address1 <= zext_ln41_9_fu_471_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                weights1_address1 <= zext_ln41_7_fu_441_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                weights1_address1 <= zext_ln41_5_fu_411_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                weights1_address1 <= zext_ln41_3_fu_381_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                weights1_address1 <= zext_ln41_fu_360_p1(10 - 1 downto 0);
            else 
                weights1_address1 <= "XXXXXXXXXX";
            end if;
        else 
            weights1_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    weights1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            weights1_ce0 <= ap_const_logic_1;
        else 
            weights1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            weights1_ce1 <= ap_const_logic_1;
        else 
            weights1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln41_10_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_8_fu_476_p2),64));
    zext_ln41_11_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_9_fu_496_p2),64));
    zext_ln41_12_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_10_fu_506_p2),64));
    zext_ln41_13_fu_536_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_11_fu_531_p2),64));
    zext_ln41_2_fu_371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_fu_365_p2),64));
    zext_ln41_3_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_1_fu_376_p2),64));
    zext_ln41_4_fu_391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_2_fu_386_p2),64));
    zext_ln41_5_fu_411_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_3_fu_406_p2),64));
    zext_ln41_6_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_4_fu_416_p2),64));
    zext_ln41_7_fu_441_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_5_fu_436_p2),64));
    zext_ln41_8_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_6_fu_446_p2),64));
    zext_ln41_9_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_7_fu_466_p2),64));
    zext_ln41_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln41_fu_354_p2),64));
end behav;
