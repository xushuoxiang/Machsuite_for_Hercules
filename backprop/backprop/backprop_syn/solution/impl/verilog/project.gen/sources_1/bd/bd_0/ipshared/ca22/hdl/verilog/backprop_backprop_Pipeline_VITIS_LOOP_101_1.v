// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module backprop_backprop_Pipeline_VITIS_LOOP_101_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        oracle_activations2_address0,
        oracle_activations2_ce0,
        oracle_activations2_we0,
        oracle_activations2_d0,
        weights3_address0,
        weights3_ce0,
        weights3_q0,
        weights3_address1,
        weights3_ce1,
        weights3_q1,
        output_difference_0_1_reload,
        output_difference_1_1_reload,
        output_difference_2_1_reload,
        dactivations2_address0,
        dactivations2_ce0,
        dactivations2_q0,
        grp_fu_6768_p_din0,
        grp_fu_6768_p_din1,
        grp_fu_6768_p_opcode,
        grp_fu_6768_p_dout0,
        grp_fu_6768_p_ce,
        grp_fu_6772_p_din0,
        grp_fu_6772_p_din1,
        grp_fu_6772_p_opcode,
        grp_fu_6772_p_dout0,
        grp_fu_6772_p_ce,
        grp_fu_6776_p_din0,
        grp_fu_6776_p_din1,
        grp_fu_6776_p_dout0,
        grp_fu_6776_p_ce,
        grp_fu_6780_p_din0,
        grp_fu_6780_p_din1,
        grp_fu_6780_p_dout0,
        grp_fu_6780_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] oracle_activations2_address0;
output   oracle_activations2_ce0;
output   oracle_activations2_we0;
output  [63:0] oracle_activations2_d0;
output  [7:0] weights3_address0;
output   weights3_ce0;
input  [63:0] weights3_q0;
output  [7:0] weights3_address1;
output   weights3_ce1;
input  [63:0] weights3_q1;
input  [63:0] output_difference_0_1_reload;
input  [63:0] output_difference_1_1_reload;
input  [63:0] output_difference_2_1_reload;
output  [5:0] dactivations2_address0;
output   dactivations2_ce0;
input  [63:0] dactivations2_q0;
output  [63:0] grp_fu_6768_p_din0;
output  [63:0] grp_fu_6768_p_din1;
output  [0:0] grp_fu_6768_p_opcode;
input  [63:0] grp_fu_6768_p_dout0;
output   grp_fu_6768_p_ce;
output  [63:0] grp_fu_6772_p_din0;
output  [63:0] grp_fu_6772_p_din1;
output  [0:0] grp_fu_6772_p_opcode;
input  [63:0] grp_fu_6772_p_dout0;
output   grp_fu_6772_p_ce;
output  [63:0] grp_fu_6776_p_din0;
output  [63:0] grp_fu_6776_p_din1;
input  [63:0] grp_fu_6776_p_dout0;
output   grp_fu_6776_p_ce;
output  [63:0] grp_fu_6780_p_din0;
output  [63:0] grp_fu_6780_p_din1;
input  [63:0] grp_fu_6780_p_dout0;
output   grp_fu_6780_p_ce;

reg ap_idle;
reg oracle_activations2_ce0;
reg oracle_activations2_we0;
reg[7:0] weights3_address0;
reg weights3_ce0;
reg weights3_ce1;
reg dactivations2_ce0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_state22_pp0_stage1_iter10;
wire    ap_block_state24_pp0_stage1_iter11;
wire    ap_block_state26_pp0_stage1_iter12;
wire    ap_block_state28_pp0_stage1_iter13;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln101_reg_277;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [63:0] reg_154;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_state21_pp0_stage0_iter10;
wire    ap_block_state23_pp0_stage0_iter11;
wire    ap_block_state25_pp0_stage0_iter12;
wire    ap_block_state27_pp0_stage0_iter13;
wire    ap_block_state29_pp0_stage0_iter14;
wire    ap_block_pp0_stage0_11001;
reg   [6:0] i_19_reg_272;
reg   [6:0] i_19_reg_272_pp0_iter1_reg;
reg   [6:0] i_19_reg_272_pp0_iter2_reg;
reg   [6:0] i_19_reg_272_pp0_iter3_reg;
reg   [6:0] i_19_reg_272_pp0_iter4_reg;
reg   [6:0] i_19_reg_272_pp0_iter5_reg;
reg   [6:0] i_19_reg_272_pp0_iter6_reg;
reg   [6:0] i_19_reg_272_pp0_iter7_reg;
reg   [6:0] i_19_reg_272_pp0_iter8_reg;
reg   [6:0] i_19_reg_272_pp0_iter9_reg;
wire   [0:0] icmp_ln101_fu_167_p2;
reg   [0:0] icmp_ln101_reg_277_pp0_iter1_reg;
reg   [0:0] icmp_ln101_reg_277_pp0_iter2_reg;
reg   [0:0] icmp_ln101_reg_277_pp0_iter3_reg;
reg   [0:0] icmp_ln101_reg_277_pp0_iter4_reg;
reg   [0:0] icmp_ln101_reg_277_pp0_iter5_reg;
reg   [0:0] icmp_ln101_reg_277_pp0_iter6_reg;
reg   [0:0] icmp_ln101_reg_277_pp0_iter7_reg;
reg   [0:0] icmp_ln101_reg_277_pp0_iter8_reg;
reg   [0:0] icmp_ln101_reg_277_pp0_iter9_reg;
reg   [0:0] icmp_ln101_reg_277_pp0_iter10_reg;
reg   [0:0] icmp_ln101_reg_277_pp0_iter11_reg;
reg   [0:0] icmp_ln101_reg_277_pp0_iter12_reg;
wire   [7:0] sub_ln104_fu_195_p2;
reg   [7:0] sub_ln104_reg_281;
reg   [63:0] weights3_load_64_reg_296;
wire   [63:0] bitcast_ln104_fu_232_p1;
wire   [63:0] bitcast_ln104_1_fu_237_p1;
wire   [63:0] bitcast_ln104_2_fu_241_p1;
reg   [63:0] mul8_i3_reg_321;
reg   [63:0] mul8_i3_1_reg_326;
reg   [63:0] mul8_i3_1_reg_326_pp0_iter4_reg;
reg   [63:0] mul8_i3_1_reg_326_pp0_iter5_reg;
reg   [63:0] mul8_i3_2_reg_331;
reg   [63:0] mul8_i3_2_reg_331_pp0_iter4_reg;
reg   [63:0] mul8_i3_2_reg_331_pp0_iter5_reg;
reg   [63:0] mul8_i3_2_reg_331_pp0_iter6_reg;
reg   [63:0] mul8_i3_2_reg_331_pp0_iter7_reg;
reg   [63:0] add11_i3_reg_336;
reg   [63:0] add11_i3_1_reg_341;
wire   [63:0] i_23_cast33_fu_246_p1;
reg   [63:0] i_23_cast33_reg_346;
reg   [63:0] i_23_cast33_reg_346_pp0_iter11_reg;
reg   [63:0] i_23_cast33_reg_346_pp0_iter12_reg;
reg   [63:0] i_23_cast33_reg_346_pp0_iter13_reg;
reg   [63:0] add11_i3_2_reg_356;
reg   [63:0] dactivations2_load_reg_361;
reg   [63:0] mul16_i_reg_366;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln104_fu_201_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln104_1_fu_212_p1;
wire   [63:0] zext_ln104_2_fu_227_p1;
wire    ap_block_pp0_stage1;
reg   [6:0] i_fu_56;
wire   [6:0] add_ln101_fu_173_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_i_19;
reg   [63:0] grp_fu_137_p0;
reg   [63:0] grp_fu_137_p1;
reg   [63:0] grp_fu_146_p0;
reg   [63:0] grp_fu_146_p1;
reg   [63:0] grp_fu_150_p0;
reg   [63:0] grp_fu_150_p1;
wire   [5:0] empty_42_fu_183_p1;
wire   [7:0] p_shl2_fu_187_p3;
wire   [7:0] i_23_cast_fu_179_p1;
wire   [7:0] add_ln104_fu_206_p2;
wire   [7:0] add_ln104_1_fu_222_p2;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter13_stage0;
reg    ap_idle_pp0_0to12;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to14;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

backprop_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter13_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter14 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to12 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter13_stage0))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to12 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter13_stage0))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to12 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter13_stage0))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to12 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter13_stage0))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to12 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter13_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to12 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter13_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to12 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter13_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to12 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter13_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to12 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter13_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to12 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter13_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to12 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter13_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to12 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter13_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to12 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter13_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln101_fu_167_p2 == 1'd0))) begin
            i_fu_56 <= add_ln101_fu_173_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_56 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reg_154 <= weights3_q0;
    end else if (((icmp_ln101_reg_277 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        reg_154 <= weights3_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add11_i3_1_reg_341 <= grp_fu_6768_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add11_i3_2_reg_356 <= grp_fu_6772_p_dout0;
        dactivations2_load_reg_361 <= dactivations2_q0;
        mul8_i3_2_reg_331_pp0_iter4_reg <= mul8_i3_2_reg_331;
        mul8_i3_2_reg_331_pp0_iter5_reg <= mul8_i3_2_reg_331_pp0_iter4_reg;
        mul8_i3_2_reg_331_pp0_iter6_reg <= mul8_i3_2_reg_331_pp0_iter5_reg;
        mul8_i3_2_reg_331_pp0_iter7_reg <= mul8_i3_2_reg_331_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add11_i3_reg_336 <= grp_fu_6768_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_19_reg_272 <= ap_sig_allocacmp_i_19;
        i_19_reg_272_pp0_iter1_reg <= i_19_reg_272;
        i_19_reg_272_pp0_iter2_reg <= i_19_reg_272_pp0_iter1_reg;
        i_19_reg_272_pp0_iter3_reg <= i_19_reg_272_pp0_iter2_reg;
        i_19_reg_272_pp0_iter4_reg <= i_19_reg_272_pp0_iter3_reg;
        i_19_reg_272_pp0_iter5_reg <= i_19_reg_272_pp0_iter4_reg;
        i_19_reg_272_pp0_iter6_reg <= i_19_reg_272_pp0_iter5_reg;
        i_19_reg_272_pp0_iter7_reg <= i_19_reg_272_pp0_iter6_reg;
        i_19_reg_272_pp0_iter8_reg <= i_19_reg_272_pp0_iter7_reg;
        i_19_reg_272_pp0_iter9_reg <= i_19_reg_272_pp0_iter8_reg;
        i_23_cast33_reg_346[6 : 0] <= i_23_cast33_fu_246_p1[6 : 0];
        i_23_cast33_reg_346_pp0_iter11_reg[6 : 0] <= i_23_cast33_reg_346[6 : 0];
        i_23_cast33_reg_346_pp0_iter12_reg[6 : 0] <= i_23_cast33_reg_346_pp0_iter11_reg[6 : 0];
        i_23_cast33_reg_346_pp0_iter13_reg[6 : 0] <= i_23_cast33_reg_346_pp0_iter12_reg[6 : 0];
        icmp_ln101_reg_277 <= icmp_ln101_fu_167_p2;
        icmp_ln101_reg_277_pp0_iter10_reg <= icmp_ln101_reg_277_pp0_iter9_reg;
        icmp_ln101_reg_277_pp0_iter11_reg <= icmp_ln101_reg_277_pp0_iter10_reg;
        icmp_ln101_reg_277_pp0_iter12_reg <= icmp_ln101_reg_277_pp0_iter11_reg;
        icmp_ln101_reg_277_pp0_iter1_reg <= icmp_ln101_reg_277;
        icmp_ln101_reg_277_pp0_iter2_reg <= icmp_ln101_reg_277_pp0_iter1_reg;
        icmp_ln101_reg_277_pp0_iter3_reg <= icmp_ln101_reg_277_pp0_iter2_reg;
        icmp_ln101_reg_277_pp0_iter4_reg <= icmp_ln101_reg_277_pp0_iter3_reg;
        icmp_ln101_reg_277_pp0_iter5_reg <= icmp_ln101_reg_277_pp0_iter4_reg;
        icmp_ln101_reg_277_pp0_iter6_reg <= icmp_ln101_reg_277_pp0_iter5_reg;
        icmp_ln101_reg_277_pp0_iter7_reg <= icmp_ln101_reg_277_pp0_iter6_reg;
        icmp_ln101_reg_277_pp0_iter8_reg <= icmp_ln101_reg_277_pp0_iter7_reg;
        icmp_ln101_reg_277_pp0_iter9_reg <= icmp_ln101_reg_277_pp0_iter8_reg;
        mul8_i3_1_reg_326_pp0_iter4_reg <= mul8_i3_1_reg_326;
        mul8_i3_1_reg_326_pp0_iter5_reg <= mul8_i3_1_reg_326_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul16_i_reg_366 <= grp_fu_6780_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul8_i3_1_reg_326 <= grp_fu_6780_p_dout0;
        mul8_i3_reg_321 <= grp_fu_6776_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul8_i3_2_reg_331 <= grp_fu_6776_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln101_fu_167_p2 == 1'd0))) begin
        sub_ln104_reg_281 <= sub_ln104_fu_195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_reg_277 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights3_load_64_reg_296 <= weights3_q0;
    end
end

always @ (*) begin
    if (((icmp_ln101_reg_277 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln101_reg_277_pp0_iter12_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter13_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter13_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter13_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to12 = 1'b1;
    end else begin
        ap_idle_pp0_0to12 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to14 = 1'b1;
    end else begin
        ap_idle_pp0_1to14 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_19 = 7'd0;
    end else begin
        ap_sig_allocacmp_i_19 = i_fu_56;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dactivations2_ce0 = 1'b1;
    end else begin
        dactivations2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_137_p0 = add11_i3_reg_336;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_137_p0 = mul8_i3_reg_321;
    end else begin
        grp_fu_137_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_137_p1 = mul8_i3_1_reg_326_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_137_p1 = 64'd0;
    end else begin
        grp_fu_137_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_146_p0 = output_difference_2_1_reload;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_146_p0 = output_difference_0_1_reload;
        end else begin
            grp_fu_146_p0 = 'bx;
        end
    end else begin
        grp_fu_146_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_146_p1 = bitcast_ln104_2_fu_241_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_146_p1 = bitcast_ln104_fu_232_p1;
        end else begin
            grp_fu_146_p1 = 'bx;
        end
    end else begin
        grp_fu_146_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_150_p0 = add11_i3_2_reg_356;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_150_p0 = output_difference_1_1_reload;
    end else begin
        grp_fu_150_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_150_p1 = dactivations2_load_reg_361;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_150_p1 = bitcast_ln104_1_fu_237_p1;
    end else begin
        grp_fu_150_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        oracle_activations2_ce0 = 1'b1;
    end else begin
        oracle_activations2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        oracle_activations2_we0 = 1'b1;
    end else begin
        oracle_activations2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights3_address0 = zext_ln104_2_fu_227_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weights3_address0 = zext_ln104_1_fu_212_p1;
        end else begin
            weights3_address0 = 'bx;
        end
    end else begin
        weights3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        weights3_ce0 = 1'b1;
    end else begin
        weights3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights3_ce1 = 1'b1;
    end else begin
        weights3_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to12 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter13_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to14 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln101_fu_173_p2 = (ap_sig_allocacmp_i_19 + 7'd1);

assign add_ln104_1_fu_222_p2 = (sub_ln104_reg_281 + 8'd2);

assign add_ln104_fu_206_p2 = (sub_ln104_fu_195_p2 + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign bitcast_ln104_1_fu_237_p1 = weights3_load_64_reg_296;

assign bitcast_ln104_2_fu_241_p1 = reg_154;

assign bitcast_ln104_fu_232_p1 = reg_154;

assign dactivations2_address0 = i_23_cast33_fu_246_p1;

assign empty_42_fu_183_p1 = ap_sig_allocacmp_i_19[5:0];

assign grp_fu_6768_p_ce = 1'b1;

assign grp_fu_6768_p_din0 = grp_fu_137_p0;

assign grp_fu_6768_p_din1 = grp_fu_137_p1;

assign grp_fu_6768_p_opcode = 2'd0;

assign grp_fu_6772_p_ce = 1'b1;

assign grp_fu_6772_p_din0 = add11_i3_1_reg_341;

assign grp_fu_6772_p_din1 = mul8_i3_2_reg_331_pp0_iter7_reg;

assign grp_fu_6772_p_opcode = 2'd0;

assign grp_fu_6776_p_ce = 1'b1;

assign grp_fu_6776_p_din0 = grp_fu_146_p0;

assign grp_fu_6776_p_din1 = grp_fu_146_p1;

assign grp_fu_6780_p_ce = 1'b1;

assign grp_fu_6780_p_din0 = grp_fu_150_p0;

assign grp_fu_6780_p_din1 = grp_fu_150_p1;

assign i_23_cast33_fu_246_p1 = i_19_reg_272_pp0_iter9_reg;

assign i_23_cast_fu_179_p1 = ap_sig_allocacmp_i_19;

assign icmp_ln101_fu_167_p2 = ((ap_sig_allocacmp_i_19 == 7'd64) ? 1'b1 : 1'b0);

assign oracle_activations2_address0 = i_23_cast33_reg_346_pp0_iter13_reg;

assign oracle_activations2_d0 = mul16_i_reg_366;

assign p_shl2_fu_187_p3 = {{empty_42_fu_183_p1}, {2'd0}};

assign sub_ln104_fu_195_p2 = (p_shl2_fu_187_p3 - i_23_cast_fu_179_p1);

assign weights3_address1 = zext_ln104_fu_201_p1;

assign zext_ln104_1_fu_212_p1 = add_ln104_fu_206_p2;

assign zext_ln104_2_fu_227_p1 = add_ln104_1_fu_222_p2;

assign zext_ln104_fu_201_p1 = sub_ln104_fu_195_p2;

always @ (posedge ap_clk) begin
    i_23_cast33_reg_346[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    i_23_cast33_reg_346_pp0_iter11_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    i_23_cast33_reg_346_pp0_iter12_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    i_23_cast33_reg_346_pp0_iter13_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //backprop_backprop_Pipeline_VITIS_LOOP_101_1
