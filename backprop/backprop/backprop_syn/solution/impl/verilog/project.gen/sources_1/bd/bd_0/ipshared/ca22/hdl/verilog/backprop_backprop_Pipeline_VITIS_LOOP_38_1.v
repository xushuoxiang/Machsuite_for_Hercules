// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module backprop_backprop_Pipeline_VITIS_LOOP_38_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        activations1_address0,
        activations1_ce0,
        activations1_we0,
        activations1_d0,
        weights1_address0,
        weights1_ce0,
        weights1_q0,
        weights1_address1,
        weights1_ce1,
        weights1_q1,
        bitcast_ln41_1,
        bitcast_ln41_14,
        bitcast_ln41_15,
        bitcast_ln41_16,
        bitcast_ln41_17,
        bitcast_ln41_18,
        bitcast_ln41_19,
        bitcast_ln41_20,
        bitcast_ln41_21,
        bitcast_ln41_22,
        bitcast_ln41_23,
        bitcast_ln41_24,
        bitcast_ln41_25,
        grp_fu_6768_p_din0,
        grp_fu_6768_p_din1,
        grp_fu_6768_p_opcode,
        grp_fu_6768_p_dout0,
        grp_fu_6768_p_ce,
        grp_fu_6772_p_din0,
        grp_fu_6772_p_din1,
        grp_fu_6772_p_opcode,
        grp_fu_6772_p_dout0,
        grp_fu_6772_p_ce,
        grp_fu_6776_p_din0,
        grp_fu_6776_p_din1,
        grp_fu_6776_p_dout0,
        grp_fu_6776_p_ce,
        grp_fu_6780_p_din0,
        grp_fu_6780_p_din1,
        grp_fu_6780_p_dout0,
        grp_fu_6780_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 7'd1;
parameter    ap_ST_fsm_pp0_stage1 = 7'd2;
parameter    ap_ST_fsm_pp0_stage2 = 7'd4;
parameter    ap_ST_fsm_pp0_stage3 = 7'd8;
parameter    ap_ST_fsm_pp0_stage4 = 7'd16;
parameter    ap_ST_fsm_pp0_stage5 = 7'd32;
parameter    ap_ST_fsm_pp0_stage6 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] activations1_address0;
output   activations1_ce0;
output   activations1_we0;
output  [63:0] activations1_d0;
output  [9:0] weights1_address0;
output   weights1_ce0;
input  [63:0] weights1_q0;
output  [9:0] weights1_address1;
output   weights1_ce1;
input  [63:0] weights1_q1;
input  [63:0] bitcast_ln41_1;
input  [63:0] bitcast_ln41_14;
input  [63:0] bitcast_ln41_15;
input  [63:0] bitcast_ln41_16;
input  [63:0] bitcast_ln41_17;
input  [63:0] bitcast_ln41_18;
input  [63:0] bitcast_ln41_19;
input  [63:0] bitcast_ln41_20;
input  [63:0] bitcast_ln41_21;
input  [63:0] bitcast_ln41_22;
input  [63:0] bitcast_ln41_23;
input  [63:0] bitcast_ln41_24;
input  [63:0] bitcast_ln41_25;
output  [63:0] grp_fu_6768_p_din0;
output  [63:0] grp_fu_6768_p_din1;
output  [0:0] grp_fu_6768_p_opcode;
input  [63:0] grp_fu_6768_p_dout0;
output   grp_fu_6768_p_ce;
output  [63:0] grp_fu_6772_p_din0;
output  [63:0] grp_fu_6772_p_din1;
output  [0:0] grp_fu_6772_p_opcode;
input  [63:0] grp_fu_6772_p_dout0;
output   grp_fu_6772_p_ce;
output  [63:0] grp_fu_6776_p_din0;
output  [63:0] grp_fu_6776_p_din1;
input  [63:0] grp_fu_6776_p_dout0;
output   grp_fu_6776_p_ce;
output  [63:0] grp_fu_6780_p_din0;
output  [63:0] grp_fu_6780_p_din1;
input  [63:0] grp_fu_6780_p_dout0;
output   grp_fu_6780_p_ce;

reg ap_idle;
reg activations1_ce0;
reg activations1_we0;
reg[9:0] weights1_address0;
reg weights1_ce0;
reg[9:0] weights1_address1;
reg weights1_ce1;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state14_pp0_stage6_iter1;
wire    ap_block_state21_pp0_stage6_iter2;
wire    ap_block_state28_pp0_stage6_iter3;
wire    ap_block_state35_pp0_stage6_iter4;
wire    ap_block_state42_pp0_stage6_iter5;
wire    ap_block_state49_pp0_stage6_iter6;
wire    ap_block_state56_pp0_stage6_iter7;
wire    ap_block_state63_pp0_stage6_iter8;
wire    ap_block_state70_pp0_stage6_iter9;
wire    ap_block_pp0_stage6_subdone;
reg   [0:0] icmp_ln38_reg_643;
reg    ap_condition_exit_pp0_iter0_stage6;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [63:0] reg_317;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state9_pp0_stage1_iter1;
wire    ap_block_state16_pp0_stage1_iter2;
wire    ap_block_state23_pp0_stage1_iter3;
wire    ap_block_state30_pp0_stage1_iter4;
wire    ap_block_state37_pp0_stage1_iter5;
wire    ap_block_state44_pp0_stage1_iter6;
wire    ap_block_state51_pp0_stage1_iter7;
wire    ap_block_state58_pp0_stage1_iter8;
wire    ap_block_state65_pp0_stage1_iter9;
wire    ap_block_state72_pp0_stage1_iter10;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state10_pp0_stage2_iter1;
wire    ap_block_state17_pp0_stage2_iter2;
wire    ap_block_state24_pp0_stage2_iter3;
wire    ap_block_state31_pp0_stage2_iter4;
wire    ap_block_state38_pp0_stage2_iter5;
wire    ap_block_state45_pp0_stage2_iter6;
wire    ap_block_state52_pp0_stage2_iter7;
wire    ap_block_state59_pp0_stage2_iter8;
wire    ap_block_state66_pp0_stage2_iter9;
wire    ap_block_state73_pp0_stage2_iter10;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state11_pp0_stage3_iter1;
wire    ap_block_state18_pp0_stage3_iter2;
wire    ap_block_state25_pp0_stage3_iter3;
wire    ap_block_state32_pp0_stage3_iter4;
wire    ap_block_state39_pp0_stage3_iter5;
wire    ap_block_state46_pp0_stage3_iter6;
wire    ap_block_state53_pp0_stage3_iter7;
wire    ap_block_state60_pp0_stage3_iter8;
wire    ap_block_state67_pp0_stage3_iter9;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state12_pp0_stage4_iter1;
wire    ap_block_state19_pp0_stage4_iter2;
wire    ap_block_state26_pp0_stage4_iter3;
wire    ap_block_state33_pp0_stage4_iter4;
wire    ap_block_state40_pp0_stage4_iter5;
wire    ap_block_state47_pp0_stage4_iter6;
wire    ap_block_state54_pp0_stage4_iter7;
wire    ap_block_state61_pp0_stage4_iter8;
wire    ap_block_state68_pp0_stage4_iter9;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state13_pp0_stage5_iter1;
wire    ap_block_state20_pp0_stage5_iter2;
wire    ap_block_state27_pp0_stage5_iter3;
wire    ap_block_state34_pp0_stage5_iter4;
wire    ap_block_state41_pp0_stage5_iter5;
wire    ap_block_state48_pp0_stage5_iter6;
wire    ap_block_state55_pp0_stage5_iter7;
wire    ap_block_state62_pp0_stage5_iter8;
wire    ap_block_state69_pp0_stage5_iter9;
wire    ap_block_pp0_stage5_11001;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_state15_pp0_stage0_iter2;
wire    ap_block_state22_pp0_stage0_iter3;
wire    ap_block_state29_pp0_stage0_iter4;
wire    ap_block_state36_pp0_stage0_iter5;
wire    ap_block_state43_pp0_stage0_iter6;
wire    ap_block_state50_pp0_stage0_iter7;
wire    ap_block_state57_pp0_stage0_iter8;
wire    ap_block_state64_pp0_stage0_iter9;
wire    ap_block_state71_pp0_stage0_iter10;
wire    ap_block_pp0_stage0_11001;
reg   [63:0] reg_322;
reg   [63:0] reg_326;
reg   [6:0] j_2_reg_637;
reg   [6:0] j_2_reg_637_pp0_iter1_reg;
reg   [6:0] j_2_reg_637_pp0_iter2_reg;
reg   [6:0] j_2_reg_637_pp0_iter3_reg;
reg   [6:0] j_2_reg_637_pp0_iter4_reg;
reg   [6:0] j_2_reg_637_pp0_iter5_reg;
reg   [6:0] j_2_reg_637_pp0_iter6_reg;
reg   [6:0] j_2_reg_637_pp0_iter7_reg;
reg   [6:0] j_2_reg_637_pp0_iter8_reg;
reg   [6:0] j_2_reg_637_pp0_iter9_reg;
reg   [6:0] j_2_reg_637_pp0_iter10_reg;
wire   [0:0] icmp_ln38_fu_340_p2;
reg   [0:0] icmp_ln38_reg_643_pp0_iter1_reg;
reg   [0:0] icmp_ln38_reg_643_pp0_iter2_reg;
reg   [0:0] icmp_ln38_reg_643_pp0_iter3_reg;
reg   [0:0] icmp_ln38_reg_643_pp0_iter4_reg;
reg   [0:0] icmp_ln38_reg_643_pp0_iter5_reg;
reg   [0:0] icmp_ln38_reg_643_pp0_iter6_reg;
reg   [0:0] icmp_ln38_reg_643_pp0_iter7_reg;
reg   [0:0] icmp_ln38_reg_643_pp0_iter8_reg;
reg   [0:0] icmp_ln38_reg_643_pp0_iter9_reg;
wire   [9:0] mul_ln41_fu_354_p2;
reg   [9:0] mul_ln41_reg_647;
wire   [63:0] bitcast_ln41_fu_396_p1;
wire   [63:0] bitcast_ln41_13_fu_401_p1;
wire   [63:0] bitcast_ln41_2_fu_426_p1;
wire   [63:0] bitcast_ln41_3_fu_431_p1;
wire   [63:0] bitcast_ln41_4_fu_456_p1;
wire   [63:0] bitcast_ln41_5_fu_461_p1;
wire   [63:0] bitcast_ln41_6_fu_486_p1;
wire   [63:0] bitcast_ln41_7_fu_491_p1;
reg   [63:0] mul8_i_reg_762;
reg   [63:0] mul8_i_1_reg_767;
wire   [63:0] bitcast_ln41_8_fu_521_p1;
wire   [63:0] bitcast_ln41_9_fu_526_p1;
reg   [63:0] mul8_i_2_reg_787;
reg   [63:0] mul8_i_2_reg_787_pp0_iter2_reg;
reg   [63:0] mul8_i_3_reg_792;
reg   [63:0] mul8_i_3_reg_792_pp0_iter2_reg;
reg   [63:0] mul8_i_3_reg_792_pp0_iter3_reg;
wire   [63:0] bitcast_ln41_10_fu_546_p1;
wire   [63:0] bitcast_ln41_11_fu_551_p1;
reg   [63:0] mul8_i_4_reg_807;
reg   [63:0] mul8_i_4_reg_807_pp0_iter2_reg;
reg   [63:0] mul8_i_4_reg_807_pp0_iter3_reg;
reg   [63:0] mul8_i_5_reg_812;
reg   [63:0] mul8_i_5_reg_812_pp0_iter2_reg;
reg   [63:0] mul8_i_5_reg_812_pp0_iter3_reg;
reg   [63:0] mul8_i_5_reg_812_pp0_iter4_reg;
wire   [63:0] bitcast_ln41_12_fu_556_p1;
reg   [63:0] mul8_i_6_reg_822;
reg   [63:0] mul8_i_6_reg_822_pp0_iter2_reg;
reg   [63:0] mul8_i_6_reg_822_pp0_iter3_reg;
reg   [63:0] mul8_i_6_reg_822_pp0_iter4_reg;
reg   [63:0] mul8_i_7_reg_827;
reg   [63:0] mul8_i_7_reg_827_pp0_iter2_reg;
reg   [63:0] mul8_i_7_reg_827_pp0_iter3_reg;
reg   [63:0] mul8_i_7_reg_827_pp0_iter4_reg;
reg   [63:0] mul8_i_7_reg_827_pp0_iter5_reg;
reg   [63:0] mul8_i_8_reg_832;
reg   [63:0] mul8_i_8_reg_832_pp0_iter2_reg;
reg   [63:0] mul8_i_8_reg_832_pp0_iter3_reg;
reg   [63:0] mul8_i_8_reg_832_pp0_iter4_reg;
reg   [63:0] mul8_i_8_reg_832_pp0_iter5_reg;
reg   [63:0] mul8_i_8_reg_832_pp0_iter6_reg;
reg   [63:0] mul8_i_9_reg_837;
reg   [63:0] mul8_i_9_reg_837_pp0_iter2_reg;
reg   [63:0] mul8_i_9_reg_837_pp0_iter3_reg;
reg   [63:0] mul8_i_9_reg_837_pp0_iter4_reg;
reg   [63:0] mul8_i_9_reg_837_pp0_iter5_reg;
reg   [63:0] mul8_i_9_reg_837_pp0_iter6_reg;
reg   [63:0] add11_i_reg_842;
reg   [63:0] mul8_i_s_reg_847;
reg   [63:0] mul8_i_s_reg_847_pp0_iter2_reg;
reg   [63:0] mul8_i_s_reg_847_pp0_iter3_reg;
reg   [63:0] mul8_i_s_reg_847_pp0_iter4_reg;
reg   [63:0] mul8_i_s_reg_847_pp0_iter5_reg;
reg   [63:0] mul8_i_s_reg_847_pp0_iter6_reg;
reg   [63:0] mul8_i_s_reg_847_pp0_iter7_reg;
reg   [63:0] mul8_i_10_reg_852;
reg   [63:0] mul8_i_10_reg_852_pp0_iter2_reg;
reg   [63:0] mul8_i_10_reg_852_pp0_iter3_reg;
reg   [63:0] mul8_i_10_reg_852_pp0_iter4_reg;
reg   [63:0] mul8_i_10_reg_852_pp0_iter5_reg;
reg   [63:0] mul8_i_10_reg_852_pp0_iter6_reg;
reg   [63:0] mul8_i_10_reg_852_pp0_iter7_reg;
reg   [63:0] mul8_i_10_reg_852_pp0_iter8_reg;
reg   [63:0] mul8_i_11_reg_857;
reg   [63:0] mul8_i_11_reg_857_pp0_iter2_reg;
reg   [63:0] mul8_i_11_reg_857_pp0_iter3_reg;
reg   [63:0] mul8_i_11_reg_857_pp0_iter4_reg;
reg   [63:0] mul8_i_11_reg_857_pp0_iter5_reg;
reg   [63:0] mul8_i_11_reg_857_pp0_iter6_reg;
reg   [63:0] mul8_i_11_reg_857_pp0_iter7_reg;
reg   [63:0] mul8_i_11_reg_857_pp0_iter8_reg;
reg   [63:0] add11_i_1_reg_862;
reg   [63:0] add11_i_2_reg_867;
reg   [63:0] add11_i_3_reg_872;
reg   [63:0] add11_i_4_reg_877;
reg   [63:0] add11_i_5_reg_882;
reg   [63:0] add11_i_6_reg_887;
reg   [63:0] add11_i_7_reg_892;
reg   [63:0] add11_i_9_reg_897;
reg   [63:0] add11_i_s_reg_902;
reg   [63:0] add11_i_10_reg_907;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage2_subdone;
wire   [63:0] zext_ln41_fu_360_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln41_2_fu_371_p1;
wire   [63:0] zext_ln41_3_fu_381_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln41_4_fu_391_p1;
wire   [63:0] zext_ln41_5_fu_411_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln41_6_fu_421_p1;
wire   [63:0] zext_ln41_7_fu_441_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln41_8_fu_451_p1;
wire   [63:0] zext_ln41_9_fu_471_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln41_10_fu_481_p1;
wire   [63:0] zext_ln41_11_fu_501_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln41_12_fu_511_p1;
wire   [63:0] zext_ln41_13_fu_536_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] j_6_cast30_fu_561_p1;
reg   [6:0] j_fu_92;
wire   [6:0] add_ln38_fu_516_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_j_2;
reg   [63:0] grp_fu_300_p0;
reg   [63:0] grp_fu_300_p1;
reg   [63:0] grp_fu_305_p0;
reg   [63:0] grp_fu_305_p1;
reg   [63:0] grp_fu_309_p0;
reg   [63:0] grp_fu_309_p1;
reg   [63:0] grp_fu_313_p0;
reg   [63:0] grp_fu_313_p1;
wire   [5:0] empty_39_fu_346_p1;
wire   [5:0] mul_ln41_fu_354_p0;
wire   [4:0] mul_ln41_fu_354_p1;
wire   [9:0] add_ln41_fu_365_p2;
wire   [9:0] add_ln41_1_fu_376_p2;
wire   [9:0] add_ln41_2_fu_386_p2;
wire   [9:0] add_ln41_3_fu_406_p2;
wire   [9:0] add_ln41_4_fu_416_p2;
wire   [9:0] add_ln41_5_fu_436_p2;
wire   [9:0] add_ln41_6_fu_446_p2;
wire   [9:0] add_ln41_7_fu_466_p2;
wire   [9:0] add_ln41_8_fu_476_p2;
wire   [9:0] add_ln41_9_fu_496_p2;
wire   [9:0] add_ln41_10_fu_506_p2;
wire   [9:0] add_ln41_11_fu_531_p2;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage2_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter9_stage2;
reg    ap_idle_pp0_0to8;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to10;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [9:0] mul_ln41_fu_354_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

backprop_mul_6ns_5ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mul_6ns_5ns_10_1_1_U13(
    .din0(mul_ln41_fu_354_p0),
    .din1(mul_ln41_fu_354_p1),
    .dout(mul_ln41_fu_354_p2)
);

backprop_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage6),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage6)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage2))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage2))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage2))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage2))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage2))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage2))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage2))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_92 <= 7'd0;
    end else if (((icmp_ln38_reg_643 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        j_fu_92 <= add_ln38_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reg_317 <= weights1_q0;
    end else if ((((icmp_ln38_reg_643 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln38_reg_643 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln38_reg_643 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln38_reg_643 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln38_reg_643 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln38_reg_643 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_317 <= weights1_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add11_i_10_reg_907 <= grp_fu_6772_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add11_i_1_reg_862 <= grp_fu_6768_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add11_i_2_reg_867 <= grp_fu_6768_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add11_i_3_reg_872 <= grp_fu_6768_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add11_i_4_reg_877 <= grp_fu_6768_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add11_i_5_reg_882 <= grp_fu_6768_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        add11_i_6_reg_887 <= grp_fu_6768_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add11_i_7_reg_892 <= grp_fu_6772_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add11_i_9_reg_897 <= grp_fu_6772_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add11_i_reg_842 <= grp_fu_6768_p_dout0;
        mul8_i_10_reg_852 <= grp_fu_6780_p_dout0;
        mul8_i_s_reg_847 <= grp_fu_6776_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add11_i_s_reg_902 <= grp_fu_6772_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln38_reg_643 <= icmp_ln38_fu_340_p2;
        icmp_ln38_reg_643_pp0_iter1_reg <= icmp_ln38_reg_643;
        icmp_ln38_reg_643_pp0_iter2_reg <= icmp_ln38_reg_643_pp0_iter1_reg;
        icmp_ln38_reg_643_pp0_iter3_reg <= icmp_ln38_reg_643_pp0_iter2_reg;
        icmp_ln38_reg_643_pp0_iter4_reg <= icmp_ln38_reg_643_pp0_iter3_reg;
        icmp_ln38_reg_643_pp0_iter5_reg <= icmp_ln38_reg_643_pp0_iter4_reg;
        icmp_ln38_reg_643_pp0_iter6_reg <= icmp_ln38_reg_643_pp0_iter5_reg;
        icmp_ln38_reg_643_pp0_iter7_reg <= icmp_ln38_reg_643_pp0_iter6_reg;
        icmp_ln38_reg_643_pp0_iter8_reg <= icmp_ln38_reg_643_pp0_iter7_reg;
        icmp_ln38_reg_643_pp0_iter9_reg <= icmp_ln38_reg_643_pp0_iter8_reg;
        j_2_reg_637 <= ap_sig_allocacmp_j_2;
        j_2_reg_637_pp0_iter10_reg <= j_2_reg_637_pp0_iter9_reg;
        j_2_reg_637_pp0_iter1_reg <= j_2_reg_637;
        j_2_reg_637_pp0_iter2_reg <= j_2_reg_637_pp0_iter1_reg;
        j_2_reg_637_pp0_iter3_reg <= j_2_reg_637_pp0_iter2_reg;
        j_2_reg_637_pp0_iter4_reg <= j_2_reg_637_pp0_iter3_reg;
        j_2_reg_637_pp0_iter5_reg <= j_2_reg_637_pp0_iter4_reg;
        j_2_reg_637_pp0_iter6_reg <= j_2_reg_637_pp0_iter5_reg;
        j_2_reg_637_pp0_iter7_reg <= j_2_reg_637_pp0_iter6_reg;
        j_2_reg_637_pp0_iter8_reg <= j_2_reg_637_pp0_iter7_reg;
        j_2_reg_637_pp0_iter9_reg <= j_2_reg_637_pp0_iter8_reg;
        mul8_i_2_reg_787_pp0_iter2_reg <= mul8_i_2_reg_787;
        mul8_i_3_reg_792_pp0_iter2_reg <= mul8_i_3_reg_792;
        mul8_i_3_reg_792_pp0_iter3_reg <= mul8_i_3_reg_792_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul8_i_10_reg_852_pp0_iter2_reg <= mul8_i_10_reg_852;
        mul8_i_10_reg_852_pp0_iter3_reg <= mul8_i_10_reg_852_pp0_iter2_reg;
        mul8_i_10_reg_852_pp0_iter4_reg <= mul8_i_10_reg_852_pp0_iter3_reg;
        mul8_i_10_reg_852_pp0_iter5_reg <= mul8_i_10_reg_852_pp0_iter4_reg;
        mul8_i_10_reg_852_pp0_iter6_reg <= mul8_i_10_reg_852_pp0_iter5_reg;
        mul8_i_10_reg_852_pp0_iter7_reg <= mul8_i_10_reg_852_pp0_iter6_reg;
        mul8_i_10_reg_852_pp0_iter8_reg <= mul8_i_10_reg_852_pp0_iter7_reg;
        mul8_i_s_reg_847_pp0_iter2_reg <= mul8_i_s_reg_847;
        mul8_i_s_reg_847_pp0_iter3_reg <= mul8_i_s_reg_847_pp0_iter2_reg;
        mul8_i_s_reg_847_pp0_iter4_reg <= mul8_i_s_reg_847_pp0_iter3_reg;
        mul8_i_s_reg_847_pp0_iter5_reg <= mul8_i_s_reg_847_pp0_iter4_reg;
        mul8_i_s_reg_847_pp0_iter6_reg <= mul8_i_s_reg_847_pp0_iter5_reg;
        mul8_i_s_reg_847_pp0_iter7_reg <= mul8_i_s_reg_847_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul8_i_11_reg_857 <= grp_fu_6776_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul8_i_11_reg_857_pp0_iter2_reg <= mul8_i_11_reg_857;
        mul8_i_11_reg_857_pp0_iter3_reg <= mul8_i_11_reg_857_pp0_iter2_reg;
        mul8_i_11_reg_857_pp0_iter4_reg <= mul8_i_11_reg_857_pp0_iter3_reg;
        mul8_i_11_reg_857_pp0_iter5_reg <= mul8_i_11_reg_857_pp0_iter4_reg;
        mul8_i_11_reg_857_pp0_iter6_reg <= mul8_i_11_reg_857_pp0_iter5_reg;
        mul8_i_11_reg_857_pp0_iter7_reg <= mul8_i_11_reg_857_pp0_iter6_reg;
        mul8_i_11_reg_857_pp0_iter8_reg <= mul8_i_11_reg_857_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_reg_643 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul8_i_1_reg_767 <= grp_fu_6780_p_dout0;
        mul8_i_reg_762 <= grp_fu_6776_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul8_i_2_reg_787 <= grp_fu_6776_p_dout0;
        mul8_i_3_reg_792 <= grp_fu_6780_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul8_i_4_reg_807 <= grp_fu_6776_p_dout0;
        mul8_i_5_reg_812 <= grp_fu_6780_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul8_i_4_reg_807_pp0_iter2_reg <= mul8_i_4_reg_807;
        mul8_i_4_reg_807_pp0_iter3_reg <= mul8_i_4_reg_807_pp0_iter2_reg;
        mul8_i_5_reg_812_pp0_iter2_reg <= mul8_i_5_reg_812;
        mul8_i_5_reg_812_pp0_iter3_reg <= mul8_i_5_reg_812_pp0_iter2_reg;
        mul8_i_5_reg_812_pp0_iter4_reg <= mul8_i_5_reg_812_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul8_i_6_reg_822 <= grp_fu_6776_p_dout0;
        mul8_i_7_reg_827 <= grp_fu_6780_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul8_i_6_reg_822_pp0_iter2_reg <= mul8_i_6_reg_822;
        mul8_i_6_reg_822_pp0_iter3_reg <= mul8_i_6_reg_822_pp0_iter2_reg;
        mul8_i_6_reg_822_pp0_iter4_reg <= mul8_i_6_reg_822_pp0_iter3_reg;
        mul8_i_7_reg_827_pp0_iter2_reg <= mul8_i_7_reg_827;
        mul8_i_7_reg_827_pp0_iter3_reg <= mul8_i_7_reg_827_pp0_iter2_reg;
        mul8_i_7_reg_827_pp0_iter4_reg <= mul8_i_7_reg_827_pp0_iter3_reg;
        mul8_i_7_reg_827_pp0_iter5_reg <= mul8_i_7_reg_827_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul8_i_8_reg_832 <= grp_fu_6776_p_dout0;
        mul8_i_9_reg_837 <= grp_fu_6780_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul8_i_8_reg_832_pp0_iter2_reg <= mul8_i_8_reg_832;
        mul8_i_8_reg_832_pp0_iter3_reg <= mul8_i_8_reg_832_pp0_iter2_reg;
        mul8_i_8_reg_832_pp0_iter4_reg <= mul8_i_8_reg_832_pp0_iter3_reg;
        mul8_i_8_reg_832_pp0_iter5_reg <= mul8_i_8_reg_832_pp0_iter4_reg;
        mul8_i_8_reg_832_pp0_iter6_reg <= mul8_i_8_reg_832_pp0_iter5_reg;
        mul8_i_9_reg_837_pp0_iter2_reg <= mul8_i_9_reg_837;
        mul8_i_9_reg_837_pp0_iter3_reg <= mul8_i_9_reg_837_pp0_iter2_reg;
        mul8_i_9_reg_837_pp0_iter4_reg <= mul8_i_9_reg_837_pp0_iter3_reg;
        mul8_i_9_reg_837_pp0_iter5_reg <= mul8_i_9_reg_837_pp0_iter4_reg;
        mul8_i_9_reg_837_pp0_iter6_reg <= mul8_i_9_reg_837_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln38_fu_340_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln41_reg_647 <= mul_ln41_fu_354_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln38_reg_643 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln38_reg_643 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln38_reg_643 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln38_reg_643 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln38_reg_643 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln38_reg_643 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_322 <= weights1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_326 <= grp_fu_6772_p_dout0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        activations1_ce0 = 1'b1;
    end else begin
        activations1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        activations1_we0 = 1'b1;
    end else begin
        activations1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln38_reg_643 == 1'd1) & (1'b0 == ap_block_pp0_stage6_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_condition_exit_pp0_iter0_stage6 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln38_reg_643_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter9_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter9_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to8 = 1'b1;
    end else begin
        ap_idle_pp0_0to8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to10 = 1'b1;
    end else begin
        ap_idle_pp0_1to10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_2 = 7'd0;
    end else begin
        ap_sig_allocacmp_j_2 = j_fu_92;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_300_p0 = add11_i_5_reg_882;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_300_p0 = add11_i_4_reg_877;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_300_p0 = add11_i_3_reg_872;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_300_p0 = add11_i_2_reg_867;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_300_p0 = add11_i_1_reg_862;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_300_p0 = add11_i_reg_842;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_300_p0 = mul8_i_reg_762;
    end else begin
        grp_fu_300_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_300_p1 = mul8_i_6_reg_822_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_300_p1 = mul8_i_5_reg_812_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_300_p1 = mul8_i_4_reg_807_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_300_p1 = mul8_i_3_reg_792_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_300_p1 = mul8_i_2_reg_787_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_300_p1 = mul8_i_1_reg_767;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_300_p1 = 64'd0;
    end else begin
        grp_fu_300_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_305_p0 = add11_i_10_reg_907;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_305_p0 = add11_i_s_reg_902;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_305_p0 = add11_i_9_reg_897;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_305_p0 = reg_326;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_305_p0 = add11_i_7_reg_892;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_305_p0 = add11_i_6_reg_887;
    end else begin
        grp_fu_305_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_305_p1 = mul8_i_11_reg_857_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_305_p1 = mul8_i_10_reg_852_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_305_p1 = mul8_i_s_reg_847_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_305_p1 = mul8_i_9_reg_837_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_305_p1 = mul8_i_8_reg_832_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_305_p1 = mul8_i_7_reg_827_pp0_iter5_reg;
    end else begin
        grp_fu_305_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_309_p0 = bitcast_ln41_12_fu_556_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_309_p0 = bitcast_ln41_10_fu_546_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_309_p0 = bitcast_ln41_8_fu_521_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_309_p0 = bitcast_ln41_6_fu_486_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_309_p0 = bitcast_ln41_4_fu_456_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_309_p0 = bitcast_ln41_2_fu_426_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_309_p0 = bitcast_ln41_fu_396_p1;
    end else begin
        grp_fu_309_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_309_p1 = bitcast_ln41_25;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_309_p1 = bitcast_ln41_23;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_309_p1 = bitcast_ln41_21;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_309_p1 = bitcast_ln41_19;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_309_p1 = bitcast_ln41_17;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_309_p1 = bitcast_ln41_15;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_309_p1 = bitcast_ln41_1;
    end else begin
        grp_fu_309_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_313_p0 = bitcast_ln41_11_fu_551_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_313_p0 = bitcast_ln41_9_fu_526_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_313_p0 = bitcast_ln41_7_fu_491_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_313_p0 = bitcast_ln41_5_fu_461_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_313_p0 = bitcast_ln41_3_fu_431_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_313_p0 = bitcast_ln41_13_fu_401_p1;
    end else begin
        grp_fu_313_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_313_p1 = bitcast_ln41_24;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_313_p1 = bitcast_ln41_22;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_313_p1 = bitcast_ln41_20;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_313_p1 = bitcast_ln41_18;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_313_p1 = bitcast_ln41_16;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_313_p1 = bitcast_ln41_14;
    end else begin
        grp_fu_313_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            weights1_address0 = zext_ln41_13_fu_536_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            weights1_address0 = zext_ln41_12_fu_511_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            weights1_address0 = zext_ln41_10_fu_481_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            weights1_address0 = zext_ln41_8_fu_451_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            weights1_address0 = zext_ln41_6_fu_421_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights1_address0 = zext_ln41_4_fu_391_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weights1_address0 = zext_ln41_2_fu_371_p1;
        end else begin
            weights1_address0 = 'bx;
        end
    end else begin
        weights1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            weights1_address1 = zext_ln41_11_fu_501_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            weights1_address1 = zext_ln41_9_fu_471_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            weights1_address1 = zext_ln41_7_fu_441_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            weights1_address1 = zext_ln41_5_fu_411_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights1_address1 = zext_ln41_3_fu_381_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weights1_address1 = zext_ln41_fu_360_p1;
        end else begin
            weights1_address1 = 'bx;
        end
    end else begin
        weights1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        weights1_ce0 = 1'b1;
    end else begin
        weights1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        weights1_ce1 = 1'b1;
    end else begin
        weights1_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to10 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign activations1_address0 = j_6_cast30_fu_561_p1;

assign activations1_d0 = reg_326;

assign add_ln38_fu_516_p2 = (j_2_reg_637 + 7'd1);

assign add_ln41_10_fu_506_p2 = (mul_ln41_reg_647 + 10'd11);

assign add_ln41_11_fu_531_p2 = (mul_ln41_reg_647 + 10'd12);

assign add_ln41_1_fu_376_p2 = (mul_ln41_reg_647 + 10'd2);

assign add_ln41_2_fu_386_p2 = (mul_ln41_reg_647 + 10'd3);

assign add_ln41_3_fu_406_p2 = (mul_ln41_reg_647 + 10'd4);

assign add_ln41_4_fu_416_p2 = (mul_ln41_reg_647 + 10'd5);

assign add_ln41_5_fu_436_p2 = (mul_ln41_reg_647 + 10'd6);

assign add_ln41_6_fu_446_p2 = (mul_ln41_reg_647 + 10'd7);

assign add_ln41_7_fu_466_p2 = (mul_ln41_reg_647 + 10'd8);

assign add_ln41_8_fu_476_p2 = (mul_ln41_reg_647 + 10'd9);

assign add_ln41_9_fu_496_p2 = (mul_ln41_reg_647 + 10'd10);

assign add_ln41_fu_365_p2 = (mul_ln41_fu_354_p2 + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage5_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage6_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage5_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage6_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage6;

assign bitcast_ln41_10_fu_546_p1 = reg_317;

assign bitcast_ln41_11_fu_551_p1 = reg_322;

assign bitcast_ln41_12_fu_556_p1 = reg_317;

assign bitcast_ln41_13_fu_401_p1 = reg_322;

assign bitcast_ln41_2_fu_426_p1 = reg_317;

assign bitcast_ln41_3_fu_431_p1 = reg_322;

assign bitcast_ln41_4_fu_456_p1 = reg_317;

assign bitcast_ln41_5_fu_461_p1 = reg_322;

assign bitcast_ln41_6_fu_486_p1 = reg_317;

assign bitcast_ln41_7_fu_491_p1 = reg_322;

assign bitcast_ln41_8_fu_521_p1 = reg_317;

assign bitcast_ln41_9_fu_526_p1 = reg_322;

assign bitcast_ln41_fu_396_p1 = reg_317;

assign empty_39_fu_346_p1 = ap_sig_allocacmp_j_2[5:0];

assign grp_fu_6768_p_ce = 1'b1;

assign grp_fu_6768_p_din0 = grp_fu_300_p0;

assign grp_fu_6768_p_din1 = grp_fu_300_p1;

assign grp_fu_6768_p_opcode = 2'd0;

assign grp_fu_6772_p_ce = 1'b1;

assign grp_fu_6772_p_din0 = grp_fu_305_p0;

assign grp_fu_6772_p_din1 = grp_fu_305_p1;

assign grp_fu_6772_p_opcode = 2'd0;

assign grp_fu_6776_p_ce = 1'b1;

assign grp_fu_6776_p_din0 = grp_fu_309_p0;

assign grp_fu_6776_p_din1 = grp_fu_309_p1;

assign grp_fu_6780_p_ce = 1'b1;

assign grp_fu_6780_p_din0 = grp_fu_313_p0;

assign grp_fu_6780_p_din1 = grp_fu_313_p1;

assign icmp_ln38_fu_340_p2 = ((ap_sig_allocacmp_j_2 == 7'd64) ? 1'b1 : 1'b0);

assign j_6_cast30_fu_561_p1 = j_2_reg_637_pp0_iter10_reg;

assign mul_ln41_fu_354_p0 = mul_ln41_fu_354_p00;

assign mul_ln41_fu_354_p00 = empty_39_fu_346_p1;

assign mul_ln41_fu_354_p1 = 10'd13;

assign zext_ln41_10_fu_481_p1 = add_ln41_8_fu_476_p2;

assign zext_ln41_11_fu_501_p1 = add_ln41_9_fu_496_p2;

assign zext_ln41_12_fu_511_p1 = add_ln41_10_fu_506_p2;

assign zext_ln41_13_fu_536_p1 = add_ln41_11_fu_531_p2;

assign zext_ln41_2_fu_371_p1 = add_ln41_fu_365_p2;

assign zext_ln41_3_fu_381_p1 = add_ln41_1_fu_376_p2;

assign zext_ln41_4_fu_391_p1 = add_ln41_2_fu_386_p2;

assign zext_ln41_5_fu_411_p1 = add_ln41_3_fu_406_p2;

assign zext_ln41_6_fu_421_p1 = add_ln41_4_fu_416_p2;

assign zext_ln41_7_fu_441_p1 = add_ln41_5_fu_436_p2;

assign zext_ln41_8_fu_451_p1 = add_ln41_6_fu_446_p2;

assign zext_ln41_9_fu_471_p1 = add_ln41_7_fu_466_p2;

assign zext_ln41_fu_360_p1 = mul_ln41_fu_354_p2;

endmodule //backprop_backprop_Pipeline_VITIS_LOOP_38_1
