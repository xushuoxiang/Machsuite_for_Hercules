#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("nodes_address0", 8, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("nodes_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("nodes_q0", 128, hls_in, 0, "ap_memory", "mem_dout", 1),
	Port_Property("edges_address0", 12, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("edges_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("edges_q0", 64, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("starting_node", 64, hls_in, 2, "ap_none", "in_data", 1),
	Port_Property("level_address0", 8, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("level_ce0", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("level_we0", 1, hls_out, 3, "ap_memory", "mem_we", 1),
	Port_Property("level_d0", 8, hls_out, 3, "ap_memory", "mem_din", 1),
	Port_Property("level_q0", 8, hls_in, 3, "ap_memory", "mem_dout", 1),
	Port_Property("level_counts_address0", 4, hls_out, 4, "ap_memory", "mem_address", 1),
	Port_Property("level_counts_ce0", 1, hls_out, 4, "ap_memory", "mem_ce", 1),
	Port_Property("level_counts_we0", 1, hls_out, 4, "ap_memory", "mem_we", 1),
	Port_Property("level_counts_d0", 64, hls_out, 4, "ap_memory", "mem_din", 1),
	Port_Property("checkdata_address0", 21, hls_out, 5, "ap_memory", "mem_address", 1),
	Port_Property("checkdata_ce0", 1, hls_out, 5, "ap_memory", "mem_ce", 1),
	Port_Property("checkdata_we0", 16, hls_out, 5, "ap_memory", "mem_we", 1),
	Port_Property("checkdata_d0", 128, hls_out, 5, "ap_memory", "mem_din", 1),
	Port_Property("checkdata_address1", 21, hls_out, 5, "ap_memory", "MemPortADDR2", 1),
	Port_Property("checkdata_ce1", 1, hls_out, 5, "ap_memory", "MemPortCE2", 1),
	Port_Property("checkdata_we1", 16, hls_out, 5, "ap_memory", "MemPortWE2", 1),
	Port_Property("checkdata_d1", 128, hls_out, 5, "ap_memory", "MemPortDIN2", 1),
	Port_Property("hercules_buffer_size", 32, hls_out, 6, "ap_vld", "out_data", 1),
	Port_Property("hercules_buffer_size_ap_vld", 1, hls_out, 6, "ap_vld", "out_vld", 1),
};
const char* HLS_Design_Meta::dut_name = "bfs";
