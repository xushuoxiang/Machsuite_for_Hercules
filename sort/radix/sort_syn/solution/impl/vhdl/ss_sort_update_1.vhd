-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ss_sort_update_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    a_ce0 : OUT STD_LOGIC;
    a_we0 : OUT STD_LOGIC;
    a_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    bucket_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    bucket_ce0 : OUT STD_LOGIC;
    bucket_we0 : OUT STD_LOGIC;
    bucket_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    bucket_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    b_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    b_ce0 : OUT STD_LOGIC;
    b_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    b_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    b_ce1 : OUT STD_LOGIC;
    b_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    checkdata_address0 : OUT STD_LOGIC_VECTOR (20 downto 0);
    checkdata_ce0 : OUT STD_LOGIC;
    checkdata_we0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    checkdata_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
    checkdata_address1 : OUT STD_LOGIC_VECTOR (20 downto 0);
    checkdata_ce1 : OUT STD_LOGIC;
    checkdata_we1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    checkdata_d1 : OUT STD_LOGIC_VECTOR (127 downto 0);
    exp : IN STD_LOGIC_VECTOR (4 downto 0);
    mark_a : IN STD_LOGIC_VECTOR (0 downto 0);
    global_time_1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    global_time_1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_time_1_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of ss_sort_update_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv21_1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv21_2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_const_lv21_3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000011";
    constant ap_const_lv21_4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_const_lv21_5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000101";
    constant ap_const_lv21_6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000110";
    constant ap_const_lv21_7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000111";
    constant ap_const_lv32_1000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal blockID_reg_310 : STD_LOGIC_VECTOR (9 downto 0);
    signal inc_i14_lcssa17_reg_321 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_338 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln105_reg_831 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal exp_cast_fu_343_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exp_cast_reg_805 : STD_LOGIC_VECTOR (31 downto 0);
    signal not_mark_a_fu_351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_mark_a_reg_818 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln105_1_fu_357_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln105_1_reg_826 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln105_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_17_fu_369_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_17_reg_835 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln_fu_373_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln_reg_843 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_fu_406_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_reg_859 : STD_LOGIC_VECTOR (10 downto 0);
    signal bucket_addr_reg_864 : STD_LOGIC_VECTOR (10 downto 0);
    signal b_load_1_reg_869 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln9_fu_448_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln9_reg_886 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln109_1_fu_511_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln109_1_reg_896 : STD_LOGIC_VECTOR (1 downto 0);
    signal b_load_3_reg_901 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_515_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_s_reg_908 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal bucket_addr_1_reg_913 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln109_2_fu_531_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln109_2_reg_918 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln109_3_fu_613_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln109_3_reg_923 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal tmp_2_fu_617_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_2_reg_928 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal bucket_addr_2_reg_933 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_3_fu_703_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_3_reg_938 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal bucket_addr_3_reg_943 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln107_fu_788_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_phi_mux_blockID_phi_fu_314_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln109_fu_381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_1_fu_392_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln111_fu_413_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln109_2_fu_423_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_3_fu_433_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln111_4_fu_443_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal inc_i14_lcssa17_cast6_fu_438_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln9_fu_472_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln111_1_fu_521_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln111_5_fu_535_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln9_1_fu_551_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln9_2_fu_574_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln111_2_fu_623_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln111_6_fu_628_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln9_3_fu_644_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln9_4_fu_668_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln111_3_fu_709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln111_7_fu_714_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln9_5_fu_730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln9_6_fu_753_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln105_fu_794_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_fu_331_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal storemerge1_fu_452_p6 : STD_LOGIC_VECTOR (127 downto 0);
    signal or_ln12_fu_500_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal storemerge2_fu_556_p6 : STD_LOGIC_VECTOR (127 downto 0);
    signal or_ln12_1_fu_602_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal storemerge3_fu_649_p6 : STD_LOGIC_VECTOR (127 downto 0);
    signal or_ln12_2_fu_696_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal storemerge_fu_735_p6 : STD_LOGIC_VECTOR (127 downto 0);
    signal or_ln12_3_fu_781_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal or_ln109_fu_386_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ashr_ln109_fu_397_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln109_fu_402_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln109_1_fu_418_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln109_2_fu_428_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln9_fu_466_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln12_fu_480_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln10_fu_477_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_fu_486_p6 : STD_LOGIC_VECTOR (127 downto 0);
    signal ashr_ln109_1_fu_507_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ashr_ln109_2_fu_526_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln13_1_fu_546_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln13_fu_540_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln9_1_fu_569_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln12_1_fu_582_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln10_1_fu_579_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp2_fu_588_p6 : STD_LOGIC_VECTOR (127 downto 0);
    signal ashr_ln109_3_fu_609_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln13_3_fu_639_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln13_2_fu_633_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln9_2_fu_663_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln12_2_fu_676_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln10_2_fu_673_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp3_fu_682_p6 : STD_LOGIC_VECTOR (127 downto 0);
    signal add_ln13_5_fu_725_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln13_4_fu_719_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln9_3_fu_748_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln12_3_fu_761_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln10_3_fu_758_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp4_fu_767_p6 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    blockID_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                blockID_reg_310 <= ap_const_lv10_0;
            elsif (((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                blockID_reg_310 <= add_ln105_1_reg_826;
            end if; 
        end if;
    end process;

    inc_i14_lcssa17_reg_321_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                inc_i14_lcssa17_reg_321 <= global_time_1_i;
            elsif (((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inc_i14_lcssa17_reg_321 <= add_ln107_fu_788_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln105_1_reg_826 <= add_ln105_1_fu_357_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                b_load_1_reg_869 <= b_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                b_load_3_reg_901 <= b_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                bucket_addr_1_reg_913 <= zext_ln111_1_fu_521_p1(11 - 1 downto 0);
                tmp_s_reg_908 <= tmp_s_fu_515_p3;
                trunc_ln109_2_reg_918 <= trunc_ln109_2_fu_531_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                bucket_addr_2_reg_933 <= zext_ln111_2_fu_623_p1(11 - 1 downto 0);
                tmp_2_reg_928 <= tmp_2_fu_617_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                bucket_addr_3_reg_943 <= zext_ln111_3_fu_709_p1(11 - 1 downto 0);
                tmp_3_reg_938 <= tmp_3_fu_703_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                bucket_addr_reg_864 <= zext_ln111_fu_413_p1(11 - 1 downto 0);
                tmp_1_reg_859 <= tmp_1_fu_406_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln105_fu_363_p2 = ap_const_lv1_0))) then
                empty_17_reg_835 <= empty_17_fu_369_p1;
                    shl_ln_reg_843(10 downto 2) <= shl_ln_fu_373_p3(10 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    exp_cast_reg_805(4 downto 0) <= exp_cast_fu_343_p1(4 downto 0);
                not_mark_a_reg_818 <= not_mark_a_fu_351_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln105_reg_831 <= icmp_ln105_fu_363_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_338 <= b_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                trunc_ln109_1_reg_896 <= trunc_ln109_1_fu_511_p1;
                trunc_ln9_reg_886 <= trunc_ln9_fu_448_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                trunc_ln109_3_reg_923 <= trunc_ln109_3_fu_613_p1;
            end if;
        end if;
    end process;
    exp_cast_reg_805(31 downto 5) <= "000000000000000000000000000";
    shl_ln_reg_843(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln105_reg_831, ap_block_pp0_stage2_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((not(((icmp_ln105_reg_831 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((icmp_ln105_reg_831 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;

    a_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln111_4_fu_443_p1, ap_block_pp0_stage2, zext_ln111_5_fu_535_p1, ap_block_pp0_stage4, zext_ln111_6_fu_628_p1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, zext_ln111_7_fu_714_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            a_address0 <= zext_ln111_7_fu_714_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            a_address0 <= zext_ln111_6_fu_628_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            a_address0 <= zext_ln111_5_fu_535_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            a_address0 <= zext_ln111_4_fu_443_p1(11 - 1 downto 0);
        else 
            a_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    a_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            a_ce0 <= ap_const_logic_1;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_d0_assign_proc : process(reg_338, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, b_load_1_reg_869, b_load_3_reg_901, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            a_d0 <= b_load_3_reg_901;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            a_d0 <= b_load_1_reg_869;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            a_d0 <= reg_338;
        else 
            a_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    a_we0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln105_reg_831, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if ((((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            a_we0 <= ap_const_logic_1;
        else 
            a_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln105_1_fu_357_p2 <= std_logic_vector(unsigned(ap_phi_mux_blockID_phi_fu_314_p4) + unsigned(ap_const_lv10_1));
    add_ln105_fu_794_p2 <= std_logic_vector(unsigned(global_time_1_i) + unsigned(ap_const_lv32_1000));
    add_ln107_fu_788_p2 <= std_logic_vector(unsigned(inc_i14_lcssa17_reg_321) + unsigned(ap_const_lv32_8));
    add_ln12_1_fu_582_p2 <= std_logic_vector(unsigned(inc_i14_lcssa17_reg_321) + unsigned(ap_const_lv32_3));
    add_ln12_2_fu_676_p2 <= std_logic_vector(unsigned(inc_i14_lcssa17_reg_321) + unsigned(ap_const_lv32_5));
    add_ln12_3_fu_761_p2 <= std_logic_vector(unsigned(inc_i14_lcssa17_reg_321) + unsigned(ap_const_lv32_7));
    add_ln12_fu_480_p2 <= std_logic_vector(unsigned(inc_i14_lcssa17_reg_321) + unsigned(ap_const_lv32_1));
    add_ln13_1_fu_546_p2 <= std_logic_vector(unsigned(trunc_ln9_reg_886) + unsigned(ap_const_lv21_2));
    add_ln13_2_fu_633_p2 <= std_logic_vector(unsigned(inc_i14_lcssa17_reg_321) + unsigned(ap_const_lv32_4));
    add_ln13_3_fu_639_p2 <= std_logic_vector(unsigned(trunc_ln9_reg_886) + unsigned(ap_const_lv21_4));
    add_ln13_4_fu_719_p2 <= std_logic_vector(unsigned(inc_i14_lcssa17_reg_321) + unsigned(ap_const_lv32_6));
    add_ln13_5_fu_725_p2 <= std_logic_vector(unsigned(trunc_ln9_reg_886) + unsigned(ap_const_lv21_6));
    add_ln13_fu_540_p2 <= std_logic_vector(unsigned(inc_i14_lcssa17_reg_321) + unsigned(ap_const_lv32_2));
    add_ln9_1_fu_569_p2 <= std_logic_vector(unsigned(trunc_ln9_reg_886) + unsigned(ap_const_lv21_3));
    add_ln9_2_fu_663_p2 <= std_logic_vector(unsigned(trunc_ln9_reg_886) + unsigned(ap_const_lv21_5));
    add_ln9_3_fu_748_p2 <= std_logic_vector(unsigned(trunc_ln9_reg_886) + unsigned(ap_const_lv21_7));
    add_ln9_fu_466_p2 <= std_logic_vector(unsigned(trunc_ln9_fu_448_p1) + unsigned(ap_const_lv21_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln105_reg_831)
    begin
        if ((icmp_ln105_reg_831 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_blockID_phi_fu_314_p4_assign_proc : process(blockID_reg_310, icmp_ln105_reg_831, add_ln105_1_reg_826, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_blockID_phi_fu_314_p4 <= add_ln105_1_reg_826;
        else 
            ap_phi_mux_blockID_phi_fu_314_p4 <= blockID_reg_310;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln109_1_fu_507_p2 <= std_logic_vector(shift_right(signed(b_load_1_reg_869),to_integer(unsigned('0' & exp_cast_reg_805(31-1 downto 0)))));
    ashr_ln109_2_fu_526_p2 <= std_logic_vector(shift_right(signed(reg_338),to_integer(unsigned('0' & exp_cast_reg_805(31-1 downto 0)))));
    ashr_ln109_3_fu_609_p2 <= std_logic_vector(shift_right(signed(b_load_3_reg_901),to_integer(unsigned('0' & exp_cast_reg_805(31-1 downto 0)))));
    ashr_ln109_fu_397_p2 <= std_logic_vector(shift_right(signed(b_q1),to_integer(unsigned('0' & exp_cast_reg_805(31-1 downto 0)))));

    b_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln109_1_fu_392_p1, ap_block_pp0_stage1, zext_ln109_3_fu_433_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                b_address0 <= zext_ln109_3_fu_433_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                b_address0 <= zext_ln109_1_fu_392_p1(11 - 1 downto 0);
            else 
                b_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            b_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    b_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln109_fu_381_p1, ap_block_pp0_stage1, zext_ln109_2_fu_423_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                b_address1 <= zext_ln109_2_fu_423_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                b_address1 <= zext_ln109_fu_381_p1(11 - 1 downto 0);
            else 
                b_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            b_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    b_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            b_ce0 <= ap_const_logic_1;
        else 
            b_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            b_ce1 <= ap_const_logic_1;
        else 
            b_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    bucket_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, bucket_addr_reg_864, ap_CS_fsm_pp0_stage3, bucket_addr_1_reg_913, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, bucket_addr_2_reg_933, ap_CS_fsm_pp0_stage7, bucket_addr_3_reg_943, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln111_fu_413_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln111_1_fu_521_p1, ap_block_pp0_stage3, ap_block_pp0_stage4, zext_ln111_2_fu_623_p1, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, zext_ln111_3_fu_709_p1, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bucket_address0 <= bucket_addr_3_reg_943;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            bucket_address0 <= zext_ln111_3_fu_709_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            bucket_address0 <= bucket_addr_2_reg_933;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            bucket_address0 <= zext_ln111_2_fu_623_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            bucket_address0 <= bucket_addr_1_reg_913;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            bucket_address0 <= zext_ln111_1_fu_521_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            bucket_address0 <= bucket_addr_reg_864;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            bucket_address0 <= zext_ln111_fu_413_p1(11 - 1 downto 0);
        else 
            bucket_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    bucket_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            bucket_ce0 <= ap_const_logic_1;
        else 
            bucket_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bucket_d0 <= grp_fu_331_p2;

    bucket_we0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln105_reg_831, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if ((((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            bucket_we0 <= ap_const_logic_1;
        else 
            bucket_we0 <= ap_const_logic_0;
        end if; 
    end process;


    checkdata_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage2, zext_ln9_fu_472_p1, ap_block_pp0_stage4, zext_ln9_2_fu_574_p1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, zext_ln9_4_fu_668_p1, zext_ln9_6_fu_753_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            checkdata_address0 <= zext_ln9_6_fu_753_p1(21 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            checkdata_address0 <= zext_ln9_4_fu_668_p1(21 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            checkdata_address0 <= zext_ln9_2_fu_574_p1(21 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            checkdata_address0 <= zext_ln9_fu_472_p1(21 - 1 downto 0);
        else 
            checkdata_address0 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    checkdata_address1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage2, inc_i14_lcssa17_cast6_fu_438_p1, ap_block_pp0_stage4, zext_ln9_1_fu_551_p1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, zext_ln9_3_fu_644_p1, zext_ln9_5_fu_730_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            checkdata_address1 <= zext_ln9_5_fu_730_p1(21 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            checkdata_address1 <= zext_ln9_3_fu_644_p1(21 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            checkdata_address1 <= zext_ln9_1_fu_551_p1(21 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            checkdata_address1 <= inc_i14_lcssa17_cast6_fu_438_p1(21 - 1 downto 0);
        else 
            checkdata_address1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    checkdata_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            checkdata_ce0 <= ap_const_logic_1;
        else 
            checkdata_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    checkdata_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            checkdata_ce1 <= ap_const_logic_1;
        else 
            checkdata_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    checkdata_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, or_ln12_fu_500_p2, or_ln12_1_fu_602_p2, or_ln12_2_fu_696_p2, or_ln12_3_fu_781_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            checkdata_d0 <= or_ln12_3_fu_781_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            checkdata_d0 <= or_ln12_2_fu_696_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            checkdata_d0 <= or_ln12_1_fu_602_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            checkdata_d0 <= or_ln12_fu_500_p2;
        else 
            checkdata_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    checkdata_d1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, storemerge1_fu_452_p6, storemerge2_fu_556_p6, storemerge3_fu_649_p6, storemerge_fu_735_p6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            checkdata_d1 <= storemerge_fu_735_p6;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            checkdata_d1 <= storemerge3_fu_649_p6;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            checkdata_d1 <= storemerge2_fu_556_p6;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            checkdata_d1 <= storemerge1_fu_452_p6;
        else 
            checkdata_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    checkdata_we0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln105_reg_831, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if ((((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            checkdata_we0 <= ap_const_lv16_FFFF;
        else 
            checkdata_we0 <= ap_const_lv16_0;
        end if; 
    end process;


    checkdata_we1_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln105_reg_831, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if ((((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln105_reg_831 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            checkdata_we1 <= ap_const_lv16_FFFF;
        else 
            checkdata_we1 <= ap_const_lv16_0;
        end if; 
    end process;

    empty_17_fu_369_p1 <= ap_phi_mux_blockID_phi_fu_314_p4(9 - 1 downto 0);
    exp_cast_fu_343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp),32));

    global_time_1_o_assign_proc : process(global_time_1_i, add_ln105_fu_794_p2, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            global_time_1_o <= add_ln105_fu_794_p2;
        else 
            global_time_1_o <= global_time_1_i;
        end if; 
    end process;


    global_time_1_o_ap_vld_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            global_time_1_o_ap_vld <= ap_const_logic_1;
        else 
            global_time_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_331_p2 <= std_logic_vector(unsigned(bucket_q0) + unsigned(ap_const_lv32_1));
    icmp_ln105_fu_363_p2 <= "1" when (ap_phi_mux_blockID_phi_fu_314_p4 = ap_const_lv10_200) else "0";
    inc_i14_lcssa17_cast6_fu_438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(inc_i14_lcssa17_reg_321),64));
    not_mark_a_fu_351_p2 <= (mark_a xor ap_const_lv1_1);
    or_ln109_1_fu_418_p2 <= (shl_ln_reg_843 or ap_const_lv11_2);
    or_ln109_2_fu_428_p2 <= (shl_ln_reg_843 or ap_const_lv11_3);
    or_ln109_fu_386_p2 <= (shl_ln_fu_373_p3 or ap_const_lv11_1);
    or_ln12_1_fu_602_p2 <= (tmp2_fu_588_p6 or ap_const_lv128_lc_1);
    or_ln12_2_fu_696_p2 <= (tmp3_fu_682_p6 or ap_const_lv128_lc_1);
    or_ln12_3_fu_781_p2 <= (tmp4_fu_767_p6 or ap_const_lv128_lc_1);
    or_ln12_fu_500_p2 <= (tmp1_fu_486_p6 or ap_const_lv128_lc_1);
    shl_ln_fu_373_p3 <= (empty_17_fu_369_p1 & ap_const_lv2_0);
    storemerge1_fu_452_p6 <= ((((inc_i14_lcssa17_reg_321 & reg_338) & bucket_q0) & ap_const_lv31_0) & not_mark_a_reg_818);
    storemerge2_fu_556_p6 <= ((((add_ln13_fu_540_p2 & b_load_1_reg_869) & bucket_q0) & ap_const_lv31_0) & not_mark_a_reg_818);
    storemerge3_fu_649_p6 <= ((((add_ln13_2_fu_633_p2 & reg_338) & bucket_q0) & ap_const_lv31_0) & not_mark_a_reg_818);
    storemerge_fu_735_p6 <= ((((add_ln13_4_fu_719_p2 & b_load_3_reg_901) & bucket_q0) & ap_const_lv31_0) & not_mark_a_reg_818);
    tmp1_fu_486_p6 <= ((((add_ln12_fu_480_p2 & grp_fu_331_p2) & ap_const_lv20_0) & zext_ln10_fu_477_p1) & ap_const_lv32_0);
    tmp2_fu_588_p6 <= ((((add_ln12_1_fu_582_p2 & grp_fu_331_p2) & ap_const_lv20_0) & zext_ln10_1_fu_579_p1) & ap_const_lv32_0);
    tmp3_fu_682_p6 <= ((((add_ln12_2_fu_676_p2 & grp_fu_331_p2) & ap_const_lv20_0) & zext_ln10_2_fu_673_p1) & ap_const_lv32_0);
    tmp4_fu_767_p6 <= ((((add_ln12_3_fu_761_p2 & grp_fu_331_p2) & ap_const_lv20_0) & zext_ln10_3_fu_758_p1) & ap_const_lv32_0);
    tmp_1_fu_406_p3 <= (trunc_ln109_fu_402_p1 & empty_17_reg_835);
    tmp_2_fu_617_p3 <= (trunc_ln109_2_reg_918 & empty_17_reg_835);
    tmp_3_fu_703_p3 <= (trunc_ln109_3_reg_923 & empty_17_reg_835);
    tmp_s_fu_515_p3 <= (trunc_ln109_1_reg_896 & empty_17_reg_835);
    trunc_ln109_1_fu_511_p1 <= ashr_ln109_1_fu_507_p2(2 - 1 downto 0);
    trunc_ln109_2_fu_531_p1 <= ashr_ln109_2_fu_526_p2(2 - 1 downto 0);
    trunc_ln109_3_fu_613_p1 <= ashr_ln109_3_fu_609_p2(2 - 1 downto 0);
    trunc_ln109_fu_402_p1 <= ashr_ln109_fu_397_p2(2 - 1 downto 0);
    trunc_ln9_fu_448_p1 <= inc_i14_lcssa17_reg_321(21 - 1 downto 0);
    zext_ln109_1_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln109_fu_386_p2),64));
    zext_ln109_2_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln109_1_fu_418_p2),64));
    zext_ln109_3_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln109_2_fu_428_p2),64));
    zext_ln109_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_373_p3),64));
    zext_ln10_1_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_reg_908),12));
    zext_ln10_2_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_reg_928),12));
    zext_ln10_3_fu_758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_938),12));
    zext_ln10_fu_477_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_859),12));
    zext_ln111_1_fu_521_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_515_p3),64));
    zext_ln111_2_fu_623_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_617_p3),64));
    zext_ln111_3_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_703_p3),64));
    zext_ln111_4_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bucket_q0),64));
    zext_ln111_5_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bucket_q0),64));
    zext_ln111_6_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bucket_q0),64));
    zext_ln111_7_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bucket_q0),64));
    zext_ln111_fu_413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_406_p3),64));
    zext_ln9_1_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_1_fu_546_p2),64));
    zext_ln9_2_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln9_1_fu_569_p2),64));
    zext_ln9_3_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_3_fu_639_p2),64));
    zext_ln9_4_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln9_2_fu_663_p2),64));
    zext_ln9_5_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_5_fu_725_p2),64));
    zext_ln9_6_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln9_3_fu_748_p2),64));
    zext_ln9_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln9_fu_466_p2),64));
end behav;
